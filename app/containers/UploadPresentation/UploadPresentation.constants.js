import _ from 'lodash'

export const { AIRTABLE_BASE_ID } = process.env
export const { AIRTABLE_API_KEY } = process.env
export const { DROPBOX_TOKEN } = process.env

export const UPLOAD_FILE_SIZE_LIMIT = 150 * 1024 * 1024
export const MAX_BLOB = 8 * 1000 * 1000 // 8Mb - Dropbox JavaScript API suggested max file / chunk size

export const DATES = {
  'April 15th (Tutorials)': '15',
  'April 16th (Tutorials)': '16',
  'April 17th (Talks)': '17',
  'April 18th (Talks)': '18',
  'April 19th (Talks)': '19',
}

const SCHEDULE = [
  {
    room: 'Ballroom Gallery, Room 321, Room 330, Room 409, Room 408',
    rooms: ['Ballroom Gallery', 'Room 321', 'Room 330', 'Room 409', 'Room 408'],
    start: '2020-04-17T08:00:00',
    end: '2020-04-17T09:00:00',
    duration: 60,
    kind: 'meal',
    section: 'hatchery',
    conf_key: 210,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Breakfast',
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T08:00:00',
    end: '2020-04-18T08:30:00',
    duration: 30,
    kind: 'meal',
    section: 'hatchery',
    conf_key: 235,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Breakfast',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-19T08:00:00',
    end: '2020-04-19T08:30:00',
    duration: 30,
    kind: 'meal',
    section: 'talks',
    conf_key: 189,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Breakfast',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-17T08:00:00',
    end: '2020-04-17T09:00:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 177,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Breakfast',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-18T08:00:00',
    end: '2020-04-18T08:30:00',
    duration: 30,
    kind: 'meal',
    section: 'talks',
    conf_key: 182,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Breakfast',
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T08:30:00',
    end: '2020-04-18T09:00:00',
    duration: 30,
    kind: 'plenary',
    section: 'hatchery',
    conf_key: 236,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lightning Talks',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-19T08:30:00',
    end: '2020-04-19T09:20:00',
    duration: 50,
    kind: 'plenary',
    section: 'talks',
    conf_key: 190,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lightning Talks',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-18T08:30:00',
    end: '2020-04-18T09:00:00',
    duration: 30,
    kind: 'plenary',
    section: 'talks',
    conf_key: 183,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lightning Talks',
  },
  {
    room: 'Room 315',
    rooms: ['Room 315'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 12,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['AndyLPK247@gmail.com'],
    name: 'Hands-On Web App Test Automation',
    authors: ['Andrew Knight'],
    description:
      'When unit tests aren\u2019t enough, how can we write reliable automated tests for Web apps in live browsers? It\u2019s easy with Python! Let\u2019s build a test project from the ground up using `pytest` and `selenium` to test DuckDuckGo searches. We\u2019ll take a top-down approach and get our hands dirty with automation code at each layer. Learn everything from switching browsers to avoiding race conditions!',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/44/',
    cancelled: false,
  },
  {
    room: 'Room 316',
    rooms: ['Room 316'],
    start: '2020-04-15T09:00:00',
    end: '2020-04-15T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 5,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['mmueller@python-academy.de'],
    name: 'Migration from Python 2 to 3',
    authors: ['Mike M\u00fcller'],
    description:
      "Python 2 reached end of life (EOL). However, there are still many projects that\r\nuse Python 2. Staying with Python 2 is certainly no long-term option for most\r\nprojects.\r\n\r\nPorting a larger program to Python 3 brakes backward compatibility with \r\nPython 2. One solution for this problem is the single-source approach that\r\nresults in source code that runs with Python 2 and 3 without any changes.\r\n\r\nThis tutorial provides a short overview over the most important differences\r\nbetween Python 2 and 3. After looking at different approaches for Python 3\r\nsupport, the focus will be on writing single-source programs with \r\n`python-future`. You will learn how to port to Python 3 without loosing Python 2\r\nsupport. Finally dropping Python 2 support will get as simple as removing a few\r\nimports.\r\n\r\nThe content of this tutorial is inspired by questions I received from \r\nparticipants in trainings about how to smoothly transition from Python 2 to \r\nPython 3. Making Python 2 working as much as possible as Python 3 seems the best\r\noption to me. You are encouraged to bring your questions about this topic.\r\n\r\nI teach about this topic on a regular basis in my trainings. Being a full-time\r\nprofession trainer, I have plenty opportunity to get involved with many \r\nprogrammers who have to deal with this problem.\r\n\r\n## Software Requirements\r\n\r\nYou will need Python 3.8 installed on your laptop. Python 3.6/3.7 should also \r\nwork. You also need Python 2.7 installed to test if the code runs with Python 2 \r\nand Python 3. You may use Python 3.9 if is released at the time of the tutorial\r\nand all dependencies can be installed.\r\n\r\n### JupyterLab\r\n\r\nI will use a JupyterLab for the tutorial because it makes a very good\r\nteaching tool. You are welcome to use the setup you prefer, i.e editor, IDE,\r\nREPL. If you also like to use a JupyterLab, I recommend `conda` for\r\neasy installation. Similarly to `virtualenv`, `conda` allows creating isolated\r\nenvironments but allows binary installs for all platforms.\r\n\r\nThere are two ways to install `Jupyter` via `conda`:\r\n\r\n1. Use [Minconda][1]. This is a  small install and (after you installed it)\r\n   you can use the command  `conda` to create an environment:\r\n  `conda create -n pycon2020py38 python=3.8`\r\n   Now you can change into this environment:\r\n   `conda activate pycon2020py38`. The prompt should change to `(pycon2020py38)`.\r\n   Now you can install JupyterLab: `conda install jupyterlab`.\r\n\r\n2. Do the same with Python 2.7, i.e. `conda create -n pycon2020py27 python=2.7`\r\n   and activate accordingly `conda activate pycon2020py27`.\r\n\r\n3. Install the dependencies:\r\n\r\n    * Jupyter Lab [2] 'conda install jupyterlab'\r\n    * [six][3] 'conda install six'\r\n    * [python-future][4] 'conda install future'\r\n\r\n4. Hint: You do all this in one command:\r\n   `conda create -n pycon2020py38 python=3.8 six jupyterlab future`\r\n   and\r\n   `conda create -n pycon2020py27 python=2.7 six jupyterlab future`\r\n\r\n[1]: https://conda.io/miniconda.html\r\n[2]: https://jupyterlab.readthedocs.io/en/stable/\r\n[3]: http://python-future.org/\r\n[4]: https://six.readthedocs.io/\r\n\r\n\r\nYou can create a comparable setup with virtual environments and `pip`, if you\r\nprefer.\r\n\r\n\r\n### Working with ``conda`` environments\r\n\r\nAfter creating a new environment, the system might still work with some\r\nstale settings. Even when the command ``which`` tells you that you are using an\r\nexecutable from your environment, this might actually not be the case.\r\nIf you see strange behavior using a command line tool in your environment,\r\nuse ``hash -r`` and try again.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/60/',
    cancelled: false,
  },
  {
    room: 'Room 317',
    rooms: ['Room 317'],
    start: '2020-04-15T09:00:00',
    end: '2020-04-15T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 6,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['chekos@tacosdedatos.com'],
    name: 'Geospatial Public Policy Analysis with GeoPandas',
    authors: ['Sergio Sanchez'],
    description:
      "![cover picture](https://raw.githubusercontent.com/chekos/pics_for_github/master/Screen%20Shot%202019-11-22%20at%208.12.28%20PM.png)\r\n- [The Chronicle of Higher Education](https://www.chronicle.com/interactives/education-deserts)\r\n\r\nWhat if you could take the power of `pandas` and apply it to geospatial data?\r\nThat's what `GeoPandas` does!\r\n> `GeoPandas` _is an open source project to make working with geospatial data in python easier._\r\n> - geopandas.org\r\n\r\nIn this tutorial you will analyze openly available data and apply a GIS-lens to it! We'll use data from the National Center for Education Statistics (NCES) to recreate the map above! We'll use Integrated Post-secondary Education Data System (IPEDS) data to map out all the higher education institutions in the United States and analyze the results. We'll look at the equity implications of _Education Deserts_ and learn some really neat `pandas` and `geopandas` tricks in the process!\r\n\r\nThis tutorial is perfect for novice data analysts, pythonistas, social scientists, and journalists that want to learn about the powerful `pandas` and `geopandas` libraries and how to use it to analyze openly available data (and for those who've been using them but could learn a trick or two to make their workflow even more effective, reproducible and open). Some familiarity with `jupyter` and `pandas` is appreciated but not necessary. \r\n\r\nDo the words Title IV, PfP/PnP, census blocks, or IPUMS mean anything to you? No?! the more reason to join! Come learn something new!",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/46/',
    cancelled: false,
  },
  {
    room: 'Room 310/311',
    rooms: ['Room 310/311'],
    start: '2020-04-15T09:00:00',
    end: '2020-04-15T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 3,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['santiago.basulto@gmail.com', 'martin.zugnoni@gmail.com'],
    name: 'Python Concurrency: from beginner to pro',
    authors: ['Santiago Basulto', 'Martin Zugnoni'],
    description:
      "This is the ultimate concurrency tutorial. Aimed for beginners, we won't skip the ugly parts (OS low level and computer science concepts). In this tutorial you'll learn:\r\n\r\n* what is concurrency and why you need it?\r\n* what's the role of the OS in computing and parallelism?\r\n* how processes work, what fundamental OS structures are used\r\n* what are threads, how are they created and what's their scope\r\n* what modules does Python offer for multithreading (`_thread`, `threading`, `concurrent.futures`) and what's the difference between them, the same for multiprocessing (`subprocess`, `multiprocessing` or `concurrent.futures`).\r\n* what are race conditions? how to avoid them with synchronization primitives and threadsafe collections\r\n* What is the GIL? In which situations will it affect our code?\r\n\r\nThis tutorial will include coding examples for all the concepts in it, along with two main activities, in which we'll be writing a web server both using multithreading and multiprocessing!\r\n\r\nAt the end of this tutorial, you'll feel confident answering the following questions:\r\n\r\n* Should I **even use** concurrency?\r\n* If I want to use concurrency, threads or processes?\r\n* How can I make sure my code is safe?",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/47/',
    cancelled: false,
  },
  {
    room: 'Room 318',
    rooms: ['Room 318'],
    start: '2020-04-15T09:00:00',
    end: '2020-04-15T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 7,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['pycon@accounts.forsyth.dev', 'scopatz@quansight.com'],
    name: 'xonsh - bring Python to your shell',
    authors: ['Gil Forsyth', 'Anthony Scopatz'],
    description:
      "Can't remember how to write a loop in Bash without checking Stack Overflow?  Frustrated by single- vs double-quote behaviors?  Wish you could extend your shell using Python?  Come give `xonsh` a try!\r\n\r\nThe goals of this course are to introduce the class to xonsh, go over some of its advanced features, and show how to complete complex tasks with shockingly few lines of code.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/52/',
    cancelled: false,
  },
  {
    room: 'Room 320',
    rooms: ['Room 320'],
    start: '2020-04-15T09:00:00',
    end: '2020-04-15T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 1,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['kgalli603@gmail.com'],
    name: 'Natural Language Processing (NLP) in Python - From Zero to Hero',
    authors: ['Keith Galli'],
    description:
      'In the past year, massive developments have been made in the natural language processing field. Improvements in areas such as question answering, machine translation, and sentiment analysis have opened up doors to utilize NLP more effectively than ever before.\r\n\r\nIn this tutorial we will perform a brief overview of the field of NLP and look at the Python libraries that allow us to utilize different techniques and models. We will start with simple, traditional approaches to NLP that will provide us baseline for our models. As we progress in the tutorial we will look at some more advanced concepts that can give quick boosts to model performance. We will end by introducing state-of-the-art language models and how we can incorporate them into applications that we build.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/49/',
    cancelled: false,
  },
  {
    room: 'Room 309',
    rooms: ['Room 309'],
    start: '2020-04-15T09:00:00',
    end: '2020-04-15T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 2,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['scoutoss@gmail.com'],
    name: 'Foundations of Numerical Computing in Python',
    authors: ['Scott Sanderson'],
    description:
      "Python is one of the world's most popular programming languages for numerical computing. In areas of application like physical simulation, signal processing, predictive analytics, and more, engineers and data scientists increasingly use Python as their primary tool for working with large quantities of numeric data.\r\n\r\nDespite this diversity of application domains, almost all numerical programming in Python builds upon a small foundation of libraries. The numpy array is the core data structure for the entire PyData ecosystem, and the numpy library provides many foundational algorithms used to power more domain-specific libraries.\r\n\r\nThe goal of this tutorial is to provide an introduction to numpy -- how it works, how it's used, and what problems it aims to solve. In particular, we will focus on building students' mental model of how numpy works and of how idiomatic usage of numpy allows us to implement algorithms much more efficiently than is possible in pure Python.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/50/',
    cancelled: false,
  },
  {
    room: 'Room 319',
    rooms: ['Room 319'],
    start: '2020-04-15T09:00:00',
    end: '2020-04-15T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 8,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['kattni@adafruit.com'],
    name: 'Welcome to CircuitPython and Circuit Playground Bluefruit!',
    authors: ['Kattni Rembor'],
    description:
      "[CircuitPython](https://circuitpython.org) is Python designed to run on tiny computers called microcontrollers. This tutorial will introduce you to CircuitPython using the [Circuit Playground Bluefruit](https://www.adafruit.com/product/4333). You'll use Python code to control the features of the Bluefruit, starting simple and working your way to using Bluetooth to wirelessly control another Bluefruit.\r\n\r\nA laptop with USB is required. An Android or iOS mobile device with Bluetooth is recommended.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/51/',
    cancelled: false,
  },
  {
    room: 'Room 408',
    rooms: ['Room 408'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'summit',
    section: 'hatchery',
    conf_key: 221,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Python Packaging Summit](/2020/hatchery/packaging/)',
  },
  {
    room: 'Ballroom Gallery, Room 321, Room 330, Room 409, Room 408',
    rooms: ['Ballroom Gallery', 'Room 321', 'Room 330', 'Room 409', 'Room 408'],
    start: '2020-04-17T09:00:00',
    end: '2020-04-17T09:30:00',
    duration: 30,
    kind: 'plenary',
    section: 'hatchery',
    conf_key: 211,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Welcome to PyCon',
  },
  {
    room: 'Room 310/311',
    rooms: ['Room 310/311'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 11,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['christyheaton@gmail.com', 'e.pelaez.coyotl@gmail.com'],
    name: 'Maps and Machine Learning: Spatial Analysis with TensorFlow, scikit-learn, and PyTorch',
    authors: ['Christy Heaton', 'Erika Alejandra Pelaez Coyotl'],
    description:
      'Spatial analysis and machine learning are powerful on their own, but together they are the real deal. From finding crime hot spots, identifying land cover types, and predicting climate impacts, the possibilities are endless. Join us for this workshop where we will introduce machine learning, the intricacies of working with spatial data, and solve a series of real-world spatial problems using both.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/61/',
    cancelled: false,
  },
  {
    room: 'Room 316',
    rooms: ['Room 316'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 13,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['paul@cravenfamily.com'],
    name: 'Creating a Great Python Package',
    authors: ['Paul Vincent Craven'],
    description:
      "Looking to create a state-of-the-art Python Package? This tutorial starts with the basics of creating a Python package and listing it on PyPi. We'll then expand our package and show how to add documentation, testing, continuous integration, pre-commit checks, and more.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/63/',
    cancelled: false,
  },
  {
    room: 'Room 320',
    rooms: ['Room 320'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 9,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['witowski.sebastian@gmail.com'],
    name: "Modern Python Developer's Toolkit",
    authors: ['Sebastian Witowski'],
    description:
      'This is a tutorial that I wish someone gave to me when I first learned Python.\r\n\r\nPython is (relatively) easy and fun to learn, but there is a gap between "knowing how to write Python code" and "knowing the tools and good practices when writing Python code". This tutorial will try to bridge this gap. It\'s intended for beginners who know Python, but who are not sure how to write a Python project from scratch.\r\n\r\nIn this tutorial you will learn:\r\n\r\n* How to set up **VS Code** for writing Python\r\n* How to use `virtualenv`, `pyenv`, `pipenv`, and `pipx`\r\n* How to use `cookiecutter`, how to structure your Python project, and how to easily deploy it with Docker\r\n* What\'s **PEP8** and how to enforce it with code linters/formatters (`black`)\r\n* Why you should use `IPython` instead of Python REPL\r\n* How to test your code with `pytest`\r\n* How to create great documentation with `Sphinx`\r\n\r\nTo follow all parts of the tutorial you need to have: [VS Code](https://code.visualstudio.com/download), [Docker](https://docs.docker.com/install/), and a modern version of Python (at least 3.4, preferably 3.6 or newer) installed on your computer.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/64/',
    cancelled: false,
  },
  {
    room: 'Room 317',
    rooms: ['Room 317'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 14,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['dakshhub@outlook.com'],
    name: 'PyTorch : From Zero to Comfortable',
    authors: ['Deepak Kumar Gupta'],
    description:
      'PyTorch is an open source machine learning framework and as stated in their website, ***it accelerates the path from research prototype to production.***\r\n\r\nWelcome to the ***"Zero to Comfortable tutorial"*** on ___PyTorch___. \r\n\r\nNo matter whether you are a machine learning enthusiast or an active practitioner, this tutorial is for you and designed specifically to help you understand how PyTorch works and what are the ideal conditions for considering PyTorch as a Machine Learning / Neural Network framework for your work.\r\n\r\nThis tutorial will also help you understand one of the most prominent feature of PyTorch called `autograd` or automatic differentiation using multiple examples and exercises. Last but not the least we\'ll also see how PyTorch tensors can work seamlessly with tensors created using NumPy.\r\n\r\nThis tutorial will not make you an expert in PyTorch but shall cover enough things to make you comfortable with it so that you can test your next big ideas / solutions in PyTorch or may even adopt it for the same. You\u2019ll not only do some classroom exercises but will also be provided with the homework exercises to understand it better. Don\u2019t worry, I\u2019ll share all the exercises and solutions post tutorial session on GitHub',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/65/',
    cancelled: false,
  },
  {
    room: 'Room 309',
    rooms: ['Room 309'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 10,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['downey@allendowney.com'],
    name: 'Exploratory Data Analysis with Pandas and Matplotlib',
    authors: ['Allen Downey'],
    description:
      'Is the United States becoming more conservative or more liberal? Are we getting more polarized?  And how do these political alignments related to other opinions and attitudes?\r\n\r\nIn this tutorial, we apply the tools of exploratory data analysis to these questions, using data from the General Social Survey.\r\nParticipants will learn to use Pandas to read and analyze data, Matplotlib to visualize the results, and Jupyter to develop and test software interactively.\r\n\r\nParticipants should know basic Python, but no previous knowledge of Pandas or Matplotlib is required.  No knowledge of statistics is required.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/66/',
    cancelled: false,
  },
  {
    room: 'Room 318',
    rooms: ['Room 318'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 15,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['allison@decontextualize.com'],
    name: 'Nonsense verse (and other creative uses of spelling) with Python and machine learning',
    authors: ['Allison Parrish'],
    description:
      'When Lewis Carroll wrote "Jabberwocky," how did he know how to spell "Jabberwock"? Why are some words (like "cellar door") considered to be pleasant, while others ("pulchritude," "regurgitate") ugly and harsh? In this tutorial, we\'ll learn how to use Pincelate, a Python library and machine learning model, to analyze the sounds of words, and generate new words with particular phonetic characteristics.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/59/',
    cancelled: false,
  },
  {
    room: 'Room 319',
    rooms: ['Room 319'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 16,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['heidi@launchdarkly.com'],
    name: 'Minimum Viable Documentation',
    authors: ['Heidi Waterhouse'],
    description:
      "What is a documentation structure, and why does it matter to developers? \r\nBeing able to use language effectively saves so much coding trauma. You should learn to file good bug reports, write up problems, and describe what you're doing. I'll teach you in less than half a day!\r\n\r\nLots of developers get asked to write their own documentation, especially internal documentation and onboarding. In theory, this is good because they know the problems they are writing about and don't need to spend time explaining them. In practice, developers avoid this work because they don't have a good idea of how to start and can't evaluate whether they have succeeded. \r\n\r\nThis workshop is designed to teach you a few basic theories of technical documentation, such as task-based topics, reusable content, and writing for an audience. After the overview, you'll learn techniques for writing bug reports, error messages, and onboarding instructions in a tool-agnostic, repeatable way. You'll leave this workshop with a handful of techniques, templates, and tests that will improve your team\u2019s communication and your life as a developer.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/45/',
    cancelled: false,
  },
  {
    room: 'Room 330',
    rooms: ['Room 330'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T12:20:00',
    duration: 200,
    kind: 'summit',
    section: 'hatchery',
    conf_key: 223,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: "[Regional Conference Organizers' Summit](/2020/hatchery/organizers/)",
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T09:00:00',
    end: '2020-04-18T09:40:00',
    duration: 40,
    kind: 'plenary',
    section: 'hatchery',
    conf_key: 237,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Keynote',
  },
  {
    room: 'Room 401',
    rooms: ['Room 401'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T10:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 37,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'doc.ai: Healthcare Workshop: Build Patient Trajectories with Python and FHIR',
    authors: ['Kartik Thakore'],
    description:
      "Are you interested in making an impact on healthcare for generations to come? Get a rare deep dive into Python\u2019s application for health. In this beginner-friendly workshop, get your feet wet with electronic health records and learn how to simulate realistic patient trajectories based on the latest medical literature. We\u2019ll look at a specific medical condition, then zoom out to see how poly-omics (environmental and real-world data) can impact an individual's health trajectory. Learn to use Python tools with mock clinical data, FHIR and Synthea to work backwards from patient symptoms in records and generate simple modeling frameworks for possible health trajectories. Leave this session with a better understanding of what patient data looks like, the schema it\u2019s in, and a handful of tips and tricks for working with open source medical data.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/217/',
    cancelled: false,
  },
  {
    room: 'Room 402',
    rooms: ['Room 402'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T10:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 38,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'Heroku: From Project to Productionized on Heroku',
    authors: ['Casey Faist'],
    description:
      'In this workshop, we will take a Django application from development to ready for deployment on Heroku. We\u2019ll talk about 12 Factor Django apps and why you\u2019d want one, then work through the configuration updates you\u2019ll need to make your application robust and Heroku ready. We\u2019ll take a quick tour of your Heroku Dashboard. We\u2019ll add some human complexity and talk about how to collaborate with others and how to control and share access on Heroku, and then some debugging tips along the way. You\u2019ll leave with everything you need to hit the ground running with Django on Heroku.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/222/',
    cancelled: false,
  },
  {
    room: 'Room 404',
    rooms: ['Room 404'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T10:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 40,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'ActiveState: Managing dependencies, environment, and quality of life.',
    authors: ['Shea Newton'],
    description:
      "Complex dependencies often represent regular pains for both a project's users and its developers. Sometimes those pains manifest as complications getting dependencies built, installed, or updated. But they can manifest in places like lengthy CI/CD build times as well. In this workshop we'll explore some of the reasons a project's dependencies cause headaches, survey modern strategies for addressing those problems, then experiment with how ActiveState's Platform can help.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/219/',
    cancelled: false,
  },
  {
    room: 'Room 405',
    rooms: ['Room 405'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T10:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 41,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'IBM Q: Quantum Computing Runs on Python',
    authors: ['Jack Woehr'],
    description:
      'Quantum Computing is an entirely new paradigm of computation. Quantum hardware is at a point in its evolution that has been named \u201cNoisy Intermediate-Scale Quantum Computing\u201d (NISQ) to signify the maturity of the technology and the challenges that need to be overcome in order to reach quantum advantage. In this era, Python has emerged as a critical and generally adopted tool for preparing, assembling, and executing quantum algorithms in simulators and on quantum hardware.\r\n\r\nJoin software developer and Qiskit Advocate Jack Woehr for an introduction to quantum computing and an extended exploration of Python\u2019s prominent role in this important field. All tools demonstrated will be open-source and accessible to attendees via Github.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/223/',
    cancelled: false,
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-18T09:00:00',
    end: '2020-04-18T09:40:00',
    duration: 40,
    kind: 'plenary',
    section: 'talks',
    conf_key: 184,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Keynote',
  },
  {
    room: 'Room 403',
    rooms: ['Room 403'],
    start: '2020-04-16T09:00:00',
    end: '2020-04-16T10:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 39,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null, null],
    name: 'Capital One: Dask and RAPIDS Tutorial',
    authors: ['Mike McCarty', 'TBD'],
    description:
      'Dask is a flexible tool for parallelizing Python code on a single machine or across a cluster. It builds upon familiar tools in the SciPy ecosystem (e.g. NumPy and Pandas) while allowing them to scale across multiple cores or machines. This tutorial will cover both the high-level use of dask collections, as well as the low-level use of dask graphs and schedulers. \r\n\r\nThe RAPIDS suite of open source software libraries gives you the freedom to execute end-to-end data science pipelines entirely on GPUs. RAPIDS is incubated by NVIDIA\u00ae based on years of accelerated data science experience. RAPIDS relies on NVIDIA CUDA\u00ae primitives for low-level compute optimization, GPU parallelism, and high-bandwidth memory speed through user-friendly Python interfaces. This tutorial will teach you how to use the RAPIDS software stack from Python, including cuDF (a DataFrame library interoperable with Pandas), dask-cudf (for distributing DataFrame work over many GPUs), and cuML (a machine learning library that provides GPU-accelerated versions of the algorithms in scikit-learn).',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/244/',
    cancelled: false,
  },
  {
    room: 'Room 315',
    rooms: ['Room 315'],
    start: '2020-04-15T09:00:00',
    end: '2020-04-15T12:20:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 4,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['kimberlyfessel@gmail.com'],
    name: "It's Officially Legal so Let's Scrape the Web",
    authors: ['Kimberly Fessel'],
    description:
      'Web scraping empowers you to write Python programs that collect data from websites automatically, and recent legal rulings support your right to do so!  This tutorial covers the breadth and depth of web scraping: from HTML basics through pipeline methods to compile entire datasets.  Participants should have working knowledge of Python fundamentals but need not have prior experience scraping.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/72/',
    cancelled: false,
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-17T09:00:00',
    end: '2020-04-17T09:30:00',
    duration: 30,
    kind: 'plenary',
    section: 'talks',
    conf_key: 178,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Welcome to PyCon',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-19T09:20:00',
    end: '2020-04-19T10:00:00',
    duration: 40,
    kind: 'plenary',
    section: 'talks',
    conf_key: 191,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Keynote',
  },
  {
    room: 'Ballroom Gallery, Room 321, Room 330, Room 409, Room 408',
    rooms: ['Ballroom Gallery', 'Room 321', 'Room 330', 'Room 409', 'Room 408'],
    start: '2020-04-17T09:30:00',
    end: '2020-04-17T10:10:00',
    duration: 40,
    kind: 'plenary',
    section: 'hatchery',
    conf_key: 212,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Keynote',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-17T09:30:00',
    end: '2020-04-17T10:10:00',
    duration: 40,
    kind: 'plenary',
    section: 'talks',
    conf_key: 179,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Keynote',
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T09:40:00',
    end: '2020-04-18T10:20:00',
    duration: 40,
    kind: 'plenary',
    section: 'hatchery',
    conf_key: 238,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Keynote',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-18T09:40:00',
    end: '2020-04-18T10:20:00',
    duration: 40,
    kind: 'plenary',
    section: 'talks',
    conf_key: 185,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Keynote',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-19T10:00:00',
    end: '2020-04-19T13:00:00',
    duration: 180,
    kind: 'event',
    section: 'talks',
    conf_key: 192,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Poster Session / Job Fair / Lunch (Expo Hall)',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-17T10:10:00',
    end: '2020-04-17T10:50:00',
    duration: 40,
    kind: 'break',
    section: 'talks',
    conf_key: 180,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Ballroom Gallery, Room 321, Room 330, Room 409, Room 408',
    rooms: ['Ballroom Gallery', 'Room 321', 'Room 330', 'Room 409', 'Room 408'],
    start: '2020-04-17T10:10:00',
    end: '2020-04-17T10:50:00',
    duration: 40,
    kind: 'break',
    section: 'hatchery',
    conf_key: 213,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-18T10:20:00',
    end: '2020-04-18T10:50:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 186,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T10:20:00',
    end: '2020-04-18T10:50:00',
    duration: 30,
    kind: 'break',
    section: 'hatchery',
    conf_key: 239,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room 401, Room 402, Room 403, Room 404, Room 405',
    rooms: ['Room 401', 'Room 402', 'Room 403', 'Room 404', 'Room 405'],
    start: '2020-04-16T10:30:00',
    end: '2020-04-16T11:00:00',
    duration: 30,
    kind: 'break',
    section: 'sponsor-workshops',
    conf_key: 42,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 82,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['dakshhub@outlook.com'],
    name:
      'Saved by In-Memory NoSQL - A hitchhiker guided to Black Box debugging of Python Production Code',
    authors: ['Deepak Kumar Gupta'],
    description:
      'If you\u2019ve ever heard about or experienced a scenario where a production python bug can\u2019t be fixed because we\u2019re not able to reproduce the same, sometimes even after adding additional logs, then this session is for you.\r\n\r\n**Black box debugging** is an idea where we add low footprint and encoded debug logs in the production code which drastically increases the chances of detecting the cause of a bug without requiring a recurrence with additional logs (read Debug Logs).\r\n\r\nTraditionally, we tend to include a limited amount of logs in the production code because writing the logs on the disk is a costly affair and can potentially impact the performances, but at the same time if something goes wrong, then we need the logs to debug the system. \r\n\r\nSo what if I tell you that you can have debug logs in the production code without impacting the performance of the code\u2026!!! I bet you\u2019ll be pleasantly surprised.  \r\n\r\nWelcome to the world of harnessing an unexpected and unintended benefit of In-Memory NoSQL databases which revolutionized the way we write debug logs for our python code. \r\n\r\nIn this talk, I\u2019ll talk about how we use **In-Memory NoSQL** with python code and get persistent logs without **impacting the performance of the production code.** \r\n\r\nThis talk is for all Python programmers irrespective of their ***expertise level***',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/123/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T11:20:00',
    duration: 30,
    kind: 'charlas',
    section: 'talks',
    conf_key: 196,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['valerybriz@gmail.com'],
    name: 'Sacandole el maximo provecho a Pymongo',
    authors: ['Valery Calderon'],
    description:
      'En esta charla exploraremos algunas de las herramientas que tiene Mongodb y tal vez ni siquiera sab\u00edamos, c\u00f3mo configurar el collation, que opciones tenemos y d\u00f3nde se puede aplicar, la creaci\u00f3n de \u00edndices y sus tipos, los \u00edndices TTL para eliminar autom\u00e1ticamente datos con un tiempo de expiraci\u00f3n, cu\u00e1l es la seguridad / autenticaci\u00f3n predeterminada y c\u00f3mo mejorarla, y ese tipo de reglas silenciosas que necesitamos saber, como el hecho de que el orden de las keys en un documento es importante para obtener una coincidencia correcta al realizar un find.\r\nAl final de la charla, tendremos una caja completa de herramientas que se pueden utilizar para obtener los resultados que realmente necesitamos de las consultas.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/85/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T10:50:00',
    end: '2020-04-18T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 122,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['alysivji@gmail.com'],
    name: 'If Statements are a Code Smell',
    authors: ['Aly Sivji'],
    description:
      '`if` statements are elements of a programming language that allow us to control what statements are executed. By chaining together a series of `if` statements, we can solve any problem we can think of. But code with too many `if` statements is hard to read and even harder to change. Workarounds that once allowed us to move fast, now get in the way when we go in to make modifications. It doesn\u2019t have to be this way!\r\n\r\nThis talk demonstrates HOWTO handle complex conditional logic with simple Python classes. The material will be presented in the context of a code refactor for an open-source project: we examine the initial solution featuring duplicate `if` statements, show how hard it is to make a change, and walk through the process of refactoring `if` blocks into polymorphic classes. The case study has been simplified to illustrate concepts you can apply to your own code.\r\n\r\nAfter this talk, you will be able to identify situations where an object-oriented solution can be used to improve software design. You will also be exposed to tradeoffs we need to think about before refactoring to higher-level abstractions.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/87/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 62,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['nzakharenko@gmail.com'],
    name: 'Goodbye Print, Hello Debugger!',
    authors: ['Nina Zakharenko'],
    description:
      "Still debugging your code with print? Learn how to level up your ability to troubleshoot complex code situations by using the power of a fully-featured debugger in this talk aimed at all levels of programming ability.\r\n\r\nDebuggers allow you to examine your program state, watch as the values of important variables change, and even modify the content of variables on the fly. Once I gave up using print to debug, my productivity as a programmer increased, and yours can too!\r\n\r\nI'll showcase the variety of debugger tools available - from `pdb`, the simplest command line debugger that's part of the standard library, to fancy graphical debuggers available in Python IDEs. Join me as we walk through real code together using debugger tools in a hands-on way to help us diagnose problems and bugs. The skills you'll learn in this talk will allow you to quickly use these tools in your own code bases for fun, school, or work.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/158/',
    cancelled: false,
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T10:50:00',
    end: '2020-04-18T12:55:00',
    duration: 125,
    kind: 'coding',
    section: 'hatchery',
    conf_key: 240,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Beginners data workshop for minorities](/2020/hatchery/beginnersdata/)',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T10:50:00',
    end: '2020-04-18T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 112,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['igor.ghisi@gmail.com'],
    name: 'Write Less and Test More with Data Regression Testing',
    authors: ['Igor T. Ghisi'],
    description:
      "As data structures of a project increases in size and complexity, it becomes harder and harder to preserve test completeness. Testing objects with dozens of attributes and arrays with hundreds of values could turn into a laborious task. Often, programmers let these kind of data partially tested, especially if the required code coverage was already achieved.\r\n\r\nIn this talk we'll show how to increase test completeness for data structures by applying data regression testing. We'll be presenting pytest-regressions, a pytest plugin that helps to test datasets and objects by automatically serializing expected data on disk and later checking test results against it. We'll also show how pytest-regressions make it easier to inspect test data and debug failing tests. The talk will demonstrate examples of data regression being applied to numerical algorithms, web APIs, Flask views and SQLAlchemy models.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/110/',
    cancelled: false,
  },
  {
    room: 'Room 409',
    rooms: ['Room 409'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T12:40:00',
    duration: 110,
    kind: 'summit',
    section: 'hatchery',
    conf_key: 214,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Python Trainers Summit](/2020/hatchery/trainers/)',
  },
  {
    room: 'Room 408',
    rooms: ['Room 408'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T12:55:00',
    duration: 125,
    kind: 'summit',
    section: 'hatchery',
    conf_key: 231,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Maintainers Summit](/2020/hatchery/maintainers/)',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 102,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['josh.weissbock@gmail.com'],
    name: 'Distributed Web Scraping in Python',
    authors: ['J. Weissbock'],
    description:
      'Web scraping is easy in Python when it is just a single web page.  It becomes much more difficult when you regularly have to scrape 10,000s webpages efficiently, quickly and ensuring minimal failures from traditional network issues. In this talk we iteratively look at how a distributed web scraper is built, how to build one and why.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/128/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 92,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['caseylfaist@gmail.com'],
    name: 'Lessons in Legacy',
    authors: ['Casey Faist'],
    description:
      'The definition of a successful code project is one that lives to fight another day - but in an 8 year old project with a user base to match, what does it mean to be a successful developer?\r\n\r\nWhether you\u2019re staring down your own Odyssean adventure or trying to lure new engineers into your maelstrom\u2019s depths, come hear the triumph and tribulations of a maintainer getting to know their mature codebase.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/166/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T10:50:00',
    end: '2020-04-18T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 152,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['flavio@vinta.com.br'],
    name: '1 + 1 = 1 or Record Deduplication with Python',
    authors: ['Fl\u00e1vio Juvenal da Silva Junior'],
    description:
      "How to find duplicate records in a dataset without unique identifiers, like the SSN for US citizens? The answer is to use Record Deduplication techniques: look for matches by cleaning and comparing attributes in a fuzzy way. In this talk, you\u2019ll learn with Python examples how to do this without needing any expert Data Science knowledge.\r\n\r\nThere are several critical applications of Record Deduplication in government and business. For example, by deduping records from Census data, the Australian government was able to find there were 250,000 fewer people in the country than they previously thought. This reduction impacted the estimations of government agencies and even caused the revision of economic projections. Similarly, businesses can use record deduplication techniques to clean up customers' data. In this talk, you'll learn with Python examples the main concepts of Record Deduplication: what kinds of problems can be solved, what's the most common workflow for the process, what algorithms are involved, and which tools and libraries you can use. Although some of the discussed concepts are related to data mining, any intermediate-level Python developer will be able to learn the basics of how to dedupe data using Python.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/159/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 72,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['ericmajinglong@gmail.com'],
    name: 'A careful walk through probability distributions, using Python',
    authors: ['Eric J. Ma'],
    description:
      'In this talk, we will do more than just a random walk through probability. In particular, by using Python code as an anchor, we will explore what a probability distribution as an "object" is, especially in a modelling context. By the end of this talk, probability distributions, sampling (or generating data) from a probability distribution, and the basic terms of joint, conditional and marginal distributions, should be demystified for you, and you should leave with a solid working knowledge of probability to go further and deeper with Bayesian statistics beyond PyCon!',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/122/',
    cancelled: false,
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T12:55:00',
    duration: 125,
    kind: 'coding',
    section: 'hatchery',
    conf_key: 228,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Mentored sprints for diverse beginners](/2020/hatchery/mentoredsprints/)',
  },
  {
    room: 'Room 330',
    rooms: ['Room 330'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T12:40:00',
    duration: 110,
    kind: 'coding',
    section: 'hatchery',
    conf_key: 225,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Trans*Code Hack Day](/2020/hatchery/transcode/)',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T10:50:00',
    end: '2020-04-18T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 142,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['tom@tomforb.es'],
    name: 'Writing a Python autoreloader',
    authors: ['Tom Forbes'],
    description:
      "Reloading your code changes quickly is an integral part of the development experience in frameworks like Django and Flask that developers have come to rely on. But how do they work under the hood and what challenges do you face while writing one?\r\n\r\nIn this talk I will explore how I refactored the autoreload implementation in Django 2.2 and the lessons I learned along the way (hint: it's surprisingly complex!).",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/91/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T10:50:00',
    end: '2020-04-18T11:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 132,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['lea.saviot@numworks.com', 'emilie.feral@numworks.com'],
    name: 'Teaching Python to a whole country',
    authors: ['L\u00e9a Saviot', '\u00c9milie Feral'],
    description:
      "We thought it was time for Python to be taught in high school. We found out that surprisingly a graphing calculator was the best tool for students to start coding with. That's the reason we built the first Python calculator that's now in the hands of hundreds of thousands of high schoolers.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/88/',
    cancelled: false,
  },
  {
    room: 'Ballroom Gallery',
    rooms: ['Ballroom Gallery'],
    start: '2020-04-17T10:50:00',
    end: '2020-04-17T17:40:00',
    duration: 410,
    kind: 'event',
    section: 'hatchery',
    conf_key: 234,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[No Signal: Python for Computational Arts](/2020/hatchery/computationalarts/)',
  },
  {
    room: 'Room 402',
    rooms: ['Room 402'],
    start: '2020-04-16T11:00:00',
    end: '2020-04-16T12:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 44,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'Facebook: Machine Learning on Encrypted Data with CrypTen',
    authors: ['Mark Ibrahim'],
    description:
      'CrypTen is a machine learning framework built on PyTorch that enables you to easily study and develop machine learning models using secure computing techniques. CrypTen allows you to develop models with the PyTorch API while performing computations on encrypted data -- without revealing the protected information. Different parties can contribute information to the model or measurement without revealing what they contributed.\r\n\r\nIn this workshop, we will teach participants how to use CrypTen using interactive notebooks - participants should bring a laptop with Jupyter notebook installed. We will work through four common use scenarios for privacy preserving machine learning using secure multiparty computation to allow learning without sharing data:\r\n- Feature Aggregation: multiple parties hold distinct sets of features, and want to perform computations over the joint feature set. \r\n- Data Labeling: one party holds feature data while another party holds corresponding labels, and they would like to learn a relationship between the features and labels. \r\n- Dataset Augmentation: several parties each hold a small number of observations, and would like to use all the observations in order to improve the statistical power of a measurement or model. \r\n- Model Hiding: one party has access to a trained model, while another party would like to apply that model to its own data. \r\n\r\nWhat we\u2019ll cover: \r\n- Installation / Setup (20 min)\r\n- Machine Learning and CrypTen (10 min)\r\n- Secure Multiparty Compute and Tensors in CrypTen (15 min)\r\n- Training a Machine Learning Model on Encrypted Data (45 min)',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/231/',
    cancelled: false,
  },
  {
    room: 'Room 404',
    rooms: ['Room 404'],
    start: '2020-04-16T11:00:00',
    end: '2020-04-16T12:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 46,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'Plotly: Operationalizing data and AI initiatives with Dash',
    authors: ['Matthew Chan'],
    description:
      'Dash empowers leading enterprises to create beautiful, interactive web applications that can be shared across the organization. With Dash, teams can quickly go from concept and exploration to delivering mission critical, data rich apps, dashboards and shareable reports.\r\n\r\nThis workshop will equip teams working in Python or R with the hands-on training they need to master application design, creation, and deployment for any scale of operation. This workshop is aimed at upskilling data science teams and improving data literacy and can be tailored towards the use-case(s) and data that means the most to your organization. \r\n\r\nThe workshop will cover a deep-dive and hands-on use of Dash including: \r\n- Installation: How to install and get started with Dash\r\n- Examples: See examples of real Dash apps in the Dash Gallery\r\n-Dash Principles\r\n*Dash layout: Explore UI / UX development concepts and principles for application layouts.\r\n*Dash graphing: Learn best practices for creating and styling charts in a consumable manner to get the most out of your data visualizations.\r\n*Dash callbacks: Add interactivity into your application that engages a wide audience.\r\n- Questions: We\u2019ll leave ample time for a one-on-one Q&A and real-time feedback.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/218/',
    cancelled: false,
  },
  {
    room: 'Room 405',
    rooms: ['Room 405'],
    start: '2020-04-16T11:00:00',
    end: '2020-04-16T12:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 47,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'Xilinx, Inc.: Python at the Edge with FPGAs',
    authors: ['Dr. Parimal Patel'],
    description:
      "Edge computing is enabling exciting IoT and AI technology, combining the fields of embedded computing, networking, cloud-services and machine learning. In this workshop, we'll explore how to use PYNQ, an open-source Python and Jupyter-based framework, to develop edge computing applications on Xilinx Zynq-7000 single board computers. All Python skill levels welcome, hardware expertise not required.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/225/',
    cancelled: false,
  },
  {
    room: 'Room 401',
    rooms: ['Room 401'],
    start: '2020-04-16T11:00:00',
    end: '2020-04-16T12:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 43,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'Microsoft Azure: Easy Data Processing on Azure with Serverless Functions',
    authors: ['Tania Allard, PhD'],
    description:
      'Serverless computing (also known as function as a service, FaaS) is a design pattern where applications are hosted by a third-party service (i.e. Azure) eliminating the need for server software and hardware management by the developer. \r\nServerless can be an excellent alternative for Pythonistas interested in data processing as it allows them to focus on their code rather than the cloud infrastructure. This workshop will introduce attendees to Azure Functions for data processing scenarios (including data acquisition, cleaning and transformation and storage for subsequent usage).\r\nAfter this tutorial, attendees will have had practical experience with Azure functions for data processing scenarios. Also, they will leave the workshop with a basic function for data processing that could be further modified/extended to suit their needs/requirements.\r\nOutline\r\n1.\tIntroduction\r\na.\t Setup and install troubleshooting \r\nb.\tIntroduction to serverless and Azure functions - why serverless can be an excellent alternative for data processing scenarios\r\n2.\tCreating your first Azure function\r\na.\tCreating a simple scheduled function - 101 azure function for Python developers\r\nb.\tUsing the VS Code extension - simplify your workflow with the VS Code extension and start with a solid base\r\nc.\tUnderstanding triggers and bindings - how to schedule tasks with the "timer" trigger \r\nd.\tDeploying to Azure - using the VS code extension and familiarising with the Azure portal\r\n3.\t Data processing with serverless\r\na.\tUpdating your scheduled function to collect data from third-parties APIs\r\nb.\t Data cleaning, aggregation and storage - going from raw data to usable, clean data that can be readily accessed by your team members\r\n4.\tImproving your Azure function experience - optional\r\na.\tCI / CD for Azure functions - using GitHub actions to deploy your functions automatically\r\nb.\tAzure functions for reporting - integrate with Slack or Teams\r\nc.\tMonitoring and troubleshooting functions\r\n  Pre-requisites\r\n \r\nThis workshop is aimed at folks interested in data processing, data engineering or data science. The goal is to provide a practical introduction to serverless for data processing scenarios.\r\n \r\nWe assume that attendees:\r\n- Have intermediate Python knowledge\r\n- Have some experience with data wrangling and/or data processing (not extensive experience required but have, for example, used libraries like pandas and requests for data wrangling and API access)\r\n- Are comfortable using the command line/terminal (no need to be an expert but should be comfortable enough to navigate file systems and perform necessary Git tasks)\r\n \r\nSoftware related:\r\n \r\n- Python 3.7 installed\r\n-  VSCode installed \r\n- Azure Functions VS Code extension installed \r\n- Git installed\r\n- GitHub account\r\n \r\nA detailed guide of the workshop setup/install instructions will be sent before the workshop.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/230/',
    cancelled: false,
  },
  {
    room: 'Room 403',
    rooms: ['Room 403'],
    start: '2020-04-16T11:00:00',
    end: '2020-04-16T12:30:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 45,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'Capital One: Type Hints: Putting more Buzz in your Fizz',
    authors: ['Steven Lott'],
    description:
      'Since PEP 484 in 2014, type hints and the mypy tool have become an important part of the Python ecosystem. Type hints provide an incremental way to add information to the Python source, which can be checked by external tools like mypy and some IDE environments like PyCharm. Type hint checking can be part of a CI/CD pipeline to provide confidence that the code is likely to behave properly at run-time. Python\u2019s Duck-Typing approach can lead to working code that is hard to describe with available type hints. \r\n \r\nThis tutorial expects hands-on participation with a large number of small examples. It will start with some simple cases of type hints. We\u2019ll look at complex data structures and ways to factor the complexity out of the type hints. We\u2019ll look at circular type references, common on problems where graphs are represented. The techniques for \u201cdebugging\u201d type hints will focus on exposing the mypy reasons about the source code. \r\n\r\nWe\u2019ll look at two very easy and useful ways to incorporate type hints into class definitions using the typing.NamedTuple class and the @dataclass decorator. We\u2019ll also look at situations where the type: ignore comment can be appropriate. Another important topic will touch on how we can write a stub for a library where the code doesn\u2019t have type hints.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/245/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T11:30:00',
    end: '2020-04-17T12:00:00',
    duration: 30,
    kind: 'charlas',
    section: 'talks',
    conf_key: 197,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['renne@rennerocha.com'],
    name: 'Si no est\u00e1 documentado, su proyecto no existe.',
    authors: ['Renne Silva Gomes de Oliveira Rocha'],
    description:
      '\u00bfCu\u00e1ntas veces has encontrado en PyPI una incre\u00edble biblioteca que aparentemente resuelve tu problema espec\u00edfico pero, cuando la introduces en tu proyecto, encuentras **documentaci\u00f3n** totalmente obsoleta o incompleta? \u00bfO es el responsable de mantener una biblioteca bien construida con c\u00f3digo bien organizado y probado, pero nadie la usa?\r\n\r\nClaro, todos hemos pasado por esto, pero cometimos el mismo error con nuestros propios proyectos y dejamos la documentaci\u00f3n para m\u00e1s tarde, o estamos contentos con un peque\u00f1o archivo README que contiene ejemplos simples, o peor, simplemente la ignoramos pensando que solo un c\u00f3digo bien escrito es suficiente para que otros usen nuestro proyecto.\r\n\r\nEn esta charla hablaremos sobre la importancia de la documentaci\u00f3n, los diversos tipos de documentaci\u00f3n que podemos hacer y algunas herramientas disponibles en el ecosistema Python para facilitar la escritura, publicaci\u00f3n y mantenimiento de ella.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/78/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T11:30:00',
    end: '2020-04-18T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 123,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['adam@adiuvoengineering.com'],
    name: 'PYNQ the coolest Python Framework you never heard of.',
    authors: ['Adam Taylor'],
    description:
      'PYNQ is an open source python framework from Xilinx which enables python developers to access the performance provided by programmable logic, traditionally the realm of electronic engineers. Being able to access programmable logic from Python brings with it accelerations factors of 10x, 100X and beyond to our applications. This session will introduce the PYNQ framework, before demonstrating a number of image processing and machine learning applications developed using the PYNQ framework showcasing not only the performance boost but also the ease of use\r\n\r\nThis session will include a live demo of the PYNQ frame work running on a FPGA.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/109/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T11:30:00',
    end: '2020-04-18T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 153,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['AndyLPK247@gmail.com'],
    name: 'East Meets West When Translating Django Apps',
    authors: ['Andrew Knight'],
    description:
      '**\u4f60\u597d\uff01\u6211\u662f\u8f6f\u4ef6\u5de5\u7a0b\u5e08\u3002**\r\n\r\nPlease, someone translate! Thankfully, it\u2019s easy to do in Django for both new apps and existing ones. We\u2019ll cover language detection, URL routing, translation files, and marking strings to translate (particularly overlooked areas). As a bonus, we\u2019ll also look at translating the Django admin site! We\u2019ll use Mandarin for examples, but the techniques will work for any language.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/86/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T11:30:00',
    end: '2020-04-17T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 73,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['catherine.nelson1@gmail.com'],
    name: 'Practical privacy-preserving machine learning in Python',
    authors: ['Catherine Nelson'],
    description:
      'Machine learning is hungry for data, usually collected from users of a product and often including a lot of personal or sensitive information. What if we could build accurate machine learning models while still preserving user privacy? There\u2019s a growing number of tools in Python to help us achieve this, ranging from federated learning, where a user\u2019s data remains on their own device, to algorithms for training models on encrypted data. In this talk, I\u2019ll tour the landscape of these tools and review what works, what doesn\u2019t work, and where they fit in a machine learning pipeline.\r\n\r\nData privacy is a huge concern for everyone in tech these days, thanks to both legislation such as the GDPR, and user opinions driven by scandals in the media. Machine learning is at the forefront of this because it\u2019s hungry for large amounts of training data, but it\u2019s also an area where there\u2019s lots of research on developing solutions that protect user privacy.\r\n \r\nWhen I started learning about privacy-preserving machine learning, I found a bewildering number of research papers, introducing some really cool solutions, but very little practical advice on how to apply them in a real-world situation. This is the talk I wish I could have attended at the start of my learning journey! I\u2019ll review the landscape of Python solutions for privacy-preserving ML and show how they fit into a machine learning pipeline. I\u2019ll explain the tradeoffs of each method and also talk a little about the ethics of using personal data for training ML models. Tools and packages covered will include TensorFlow Privacy, TensorFlow Encrypted and PySyft.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/130/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T11:30:00',
    end: '2020-04-18T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 113,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['lisaliguo@yahoo.com'],
    name: 'Asyncio - liberating your compute potential and more',
    authors: ['Lisa Guo'],
    description:
      'Instagram has over 1 billion monthly active users and the backend is powered by Python web servers. Making every server count is a big challenge when the development team becomes large and the code base grows quickly. In this talk, we focus on how I/O latency impacts overall system capacity and reliability, and how we\u2019ve removed latency as the system bottleneck with Python 3\u2019s asyncio module. \r\n\r\nTraditional Python web servers process one request at a time using a WSGI interface between the web server and application. This fundamentally puts I/O latency at odds with CPU utilization. Over the last couple of years, Instagram has changed its processing model from single request to concurrent multiple requests, allowing the CPU to process other user requests when long I/O latency is present, unlocking the CPU potential to be adaptable to varied traffic characteristics. In some of our more latency bound data centers or services, we have seen 30+% capacity increase with this model. The concurrent model also brings a set of new challenges: request context vs global state, failure handling, load balancing, stack migration, and performance. We will share some of our learnings and pain points with the community.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/116/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T11:30:00',
    end: '2020-04-17T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 83,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['wdreesen@gmail.com'],
    name: 'Mixing a Raspberry Pi with Python into a 5th Grade Science Fair Project',
    authors: ['Wendi Dreesen'],
    description:
      'I am proposing a talk that describes how to get started using a Raspberry Pi with Python. My child wanted to do a science fair project this year using the Raspberry Pi to collect the data. The project was to measure how long marbles would take to travel down different types of tracks: linear and curvy.\r\n\r\nIn the talk I present a few tips that should help to make a successful project. Then I proceed to describe the project in detail and how we broke it down into steps to get it completed.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/154/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T11:30:00',
    end: '2020-04-18T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 143,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['katie@glasnt.com'],
    name: 'What is deployment, anyway?',
    authors: ['Katie McLaughlin'],
    description:
      'So you\u2019ve finished the DjangoGirls tutorial, but now you want to share it with the outside world, but how do you go about that?\r\n\r\nWhat even is production? What is the deal with web servers versus web service gateway interfaces? And static, what\'s that, then? What is involved in choosing a platform or infrastructure as a service? What even are databases? \r\n\r\nIn this presentation, we will discuss the basics beyond running a Django project locally, and discuss the concepts and strategies around how to deploy your project, ultimately answering the question, "What *is* deployment, anyway?"',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/95/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T11:30:00',
    end: '2020-04-17T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 93,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['reuven@lerner.co.il'],
    name: 'Function dissection lab -- learn how functions work by examining their innards',
    authors: ['Reuven M. Lerner'],
    description:
      "When you invoke a function, how does it know how many arguments to expect?  How does it distinguish between local and global (and enclosing) variables?  How does it know that you defined the function with *args and/or **kwargs?  And where does it store such things as docstrings, annotations, and defaults?\r\n\r\nThe short answer is that Python functions are objects -- no different from integers, strings, and dicts. And like all other bjects,\r\nfunctions have attributes. It turns out that those attributes are the source of functions' power.\r\n\r\nIn this talk, we'll peek into function attributes, gaining an understanding of (and appreciation for) the way in which functions are built.  We'll also see the relationship between attributes, functions, and Python bytecodes.  And while we'll be dissecting many functions, I can assure you that none of them will be harmed in our quest for deeper understanding.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/127/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T11:30:00',
    end: '2020-04-18T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 133,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['jesse@emptysquare.net'],
    name: "Don't Quit, Rotate",
    authors: ['A. Jesse Jiryu Davis'],
    description:
      'There comes a time in a programmer\u2019s life when you\u2019ve worked the same job too long. Quitting might be disruptive; you like your employer, or you have unvested options or other strong ties. But experienced tech employees have another option we should propose more often: rotations. Try other teams in your firm for a few weeks each, then join the one that suits you best. You\u2019ll restart your career momentum without losing the value of your tribal knowledge. I\u2019ll advise you on whether you should rotate, how to get permission, and what you will gain.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/129/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T11:30:00',
    end: '2020-04-17T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 103,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['jessica.garson@gmail.com'],
    name: 'How I Solved my NYC Parking Problem with Python',
    authors: ['Jessica Garson'],
    description:
      'Since I have a car in New York City, my car is subject to the city\u2019s alternate side of the street parking regulations. This means most nights I need to move my car before the early morning street cleaning that happens in my neighborhood. I had developed a nightly routine around moving my car before I go to sleep. I am sometimes a bit too good at this and I often move my car on days I don\u2019t need to. Since alternate side of the street parking is often canceled on days where there are holidays, or bad weather, there is a Twitter handle [@NYCASP](https://twitter.com/nycasp), which posts daily and whenever there is an emergency situation. I used Python, Twilio and the Twitter API to solve this problem for myself so I get a text message whenever I don\u2019t need to move my car.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/102/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T11:30:00',
    end: '2020-04-17T12:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 63,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['takanori@takanory.net'],
    name: 'Automate the Boring Stuff with Slackbot',
    authors: ['Takanori Suzuki'],
    description:
      "Today, there are many tasks to repeat in the company/community.\r\nIn addition, we often use chat such as Slack for daily communication.\r\nSo, I created a chatbot([PyCon JP Bot](https://github.com/pyconjp/pyconjpbot)) to automate various boring tasks related to holding PyCon JP.\r\n\r\nIn this talk, I will first explain how to create a chatbot using [slackbot](https://github.com/lins05/slackbot).\r\nI will tell you how to registers bot's integration on Slack and how to create a simple bot in Python that responds to specific keywords.\r\n\r\nAnd as a specific case, I will explain how to make a bot command to perform the following operations and technical problems.\r\n- Emoji reaction\r\n- [Block-kit](https://api.slack.com/block-kit)\r\n- Calculator: SymPy\r\n- Karma(plusplus): Peewee\r\n- Search issues, display issue details: JIRA API\r\n- Create multiple issues from a template: JIRA API, Sheets Spreadsheet API\r\n- Search files from Google Drive: Google Drive API\r\n- Account management of G Suite(user, alias, group and member): G Suite API\r\n- etc.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/120/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:10:00',
    end: '2020-04-18T12:55:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 114,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['pablogsal@gmail.com'],
    name: "The soul of the beast: Everything about Python's grammar",
    authors: ['Pablo Galindo Salgado'],
    description:
      'We will try to answer a straightforward question: What makes Python so easy to learn and read? Other languages also have a robust community and a compelling ecosystem and standard library, but Python somehow stands out on how easy it is to understand existing code and how quickly and pleasantly people can learn it. In this talk, we learn everything about the Python Grammar: how the Python parser is automatically generated and how it works, how the technical details of the grammar translate into the properties of the language we all know and love, what are the limitations that prevent some grammar rules you would think are trivial from being implement, and finally, how to include new grammar rules in CPython in the form of a new operator with an associated protocol.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/119/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:10:00',
    end: '2020-04-17T12:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 104,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['itamar@pythonspeed.com'],
    name: "Small Big Data: using NumPy and Pandas when your data doesn't fit in memory",
    authors: ['Itamar Turner-Trauring'],
    description:
      "Your data is too big to fit in memory\u2014loading it crashes your program\u2014but it's also too small for a complex Big Data cluster. How to process your data simply and quickly?\r\n\r\nIn this talk you'll learn the basic techniques for dealing with Small Big Data: money, compression, batching, and indexing. You'll specifically learn how to apply these techniques to NumPy and Pandas, but you'll also learn the key concepts you can apply to other libraries and the specifics of your particular data.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/97/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:10:00',
    end: '2020-04-17T12:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 94,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['anthony.p.shaw@gmail.com'],
    name: 'Why is Python slow?',
    authors: ['Anthony Shaw'],
    description:
      "When Python completes a comparable application 2\u201310x slower than another language, why is it slow, and can\u2019t we make it faster?\r\nIn this talk, we're going to explore different theories to understand what makes Python slow, what tasks it's fast at executing, and how you can make it faster.\r\nThen, finally, we'll explore what is coming in future versions of Python that might speed it up once and for all.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/141/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:10:00',
    end: '2020-04-18T12:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 144,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['hoekstra101@hotmail.com'],
    name: 'Beautiful Python Refactoring',
    authors: ['Conor Hoekstra'],
    description:
      "Refactoring can lead to absolutely beautiful code. Not only this, but the refactoring itself can be a thing of beauty. This talk demonstrates taking an example with a double-digit number of lines of code down to a single-digit number of lines of code. This talk will show how to identify certain anti-patterns that can be replaced with more expressive and declarative code. This is a simple talk that can be understood by all, but when applied to one's daily work can make a significant difference.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/162/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:10:00',
    end: '2020-04-17T12:40:00',
    duration: 30,
    kind: 'charlas',
    section: 'talks',
    conf_key: 198,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['luisconej@gmail.com'],
    name: 'Historias de debug en clase de Python Avanzado',
    authors: ['Luis Diego Conejo Alpizar'],
    description:
      'Como parte de mi trabajo como instructor de Python con la Universidad de Washington durante los \u00faltimos dos a\u00f1os, me ha tocado lidiar con numerosos y extra\u00f1os errores de c\u00f3digo que nos pusieron en aprietos a mis estudiantes y a mi, a\u00fan si al final resultaron ser realmente simples. En esta charla, voy a presentar cuatro de esos errores y c\u00f3mo fueron resueltos.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/79/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:10:00',
    end: '2020-04-18T12:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 154,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['bilbro@gmail.com', 'benjamin@bengfort.com'],
    name: 'Democratic APIs: Balancing Hierarchy and Humanity in Pythonic Interface Design',
    authors: ['Rebecca S Bilbro', 'Benjamin Bengfort'],
    description:
      "Building an open source library is not unlike building a democracy. The citizens of the programming community can freely choose whether or not to use the library, as well as how and whether to contribute back to the project. Meanwhile, the code of conduct lays out guidance that protects the rights of those citizens. As for governance, open source libraries are increasingly introducing mechanisms to enable different contributors and maintainers to cycle in and out of leadership roles. Finally, the API serves as a kind of rule-of-law, specifying how the library is to be used and providing direction as to how and where new components of the library can be integrated.   \r\n\r\nThe majority of resources on API design frame the problem in terms of object-oriented programming concepts; which behaviors to encapsulate, how to organize the hierarchy to enable shared behavior across classes, how to handle multiple inheritance, etc. However, it's often equally important to design around the citizenry of the project.\r\n\r\nA key challenge of building an open source project is developing an API that serves a range of use cases, encourages a diversity of contributions, and can withstand the tests of time. When we set out to create the open source machine learning diagnostics library Yellowbrick, we were faced with tough decisions: will our users mostly be experienced ML practitioners or beginners? Should we prioritize ease of use or ease of contribution? How best to coordinate between the existing APIs of our two main dependencies, scikit-learn and Matplotlib? \r\n\r\nUltimately, these decisions come down to the same challenge faced by any democracy &mdash; namely, that everyone wants power! In open source API design, the central tradeoff is of complexity, and complexity tends to be inversely proportional to control. Making an API easy *to use* requires developers to abstract away a tremendous amount of complexity &mdash; complexity which then makes it increasingly more difficult for users *to contribute*.\r\n\r\nIn this talk, we give a guided tour through the various checks and balances involved in the implementation of the Yellowbrick API. We walk through our decisions, including some of our biggest challenges, successes, and lessons learned along the way, in the hopes that our case study can help inform the creators of new libraries in the Python ecosystem!",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/145/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:10:00',
    end: '2020-04-17T12:55:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 74,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['shreyakhurana11235@gmail.com'],
    name:
      '"Bonjour mademoiselle! Wie geht es dir? W\u01d2 h\u011bn h\u01ceo. Dhanyawaad" -How multilingual is your NLP model?',
    authors: ['Shreya Khurana'],
    description:
      "Natural language is constantly evolving. With social media having its own language and interactions becoming more global, NLP models need more than just monolingual corpora to understand and make sense of all this data. Roughly, 50% of the world speaks two or more languages. This comes as a challenge to NL systems because conventional models are trained to understand one language or only translate from one to the other. In this talk, we'll focus on Natural Language Understanding (NLU) for small multilingual texts.\r\n\r\nA key step in building NLU systems is language identification. First, we'll give an introduction to existing frameworks for this task in Python like cld3, langid, langdetect and will also have a short discussion on their shortcomings. \r\n\r\nAnother area of concern is transliterated and code-switched text, which consists a combination of two or more structurally different grammars and vocabulary. This type of data can be clearly seen in Tweets and comments on Facebook as well as product reviews. What makes this problem very challenging is the lack of annotated datasets and the added noise of having no \"correct\" grammar and spelling. We discuss the approaches to solve this using web crawlers and self-generated datasets.\r\n\r\nThe next section of this talk will be on using the multilingual BERT model released by Google, which is trained in 104 languages. We'll see some examples of how this model performs when given text pieces in different languages. In the final section, we'll discuss how to evaluate the model for different tasks.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/179/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:10:00',
    end: '2020-04-17T12:55:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 64,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['kat@openrobotics.org'],
    name: 'A Crash Course in Virtual Robotics: an Introduction to ROS 2 with Python 3',
    authors: ['Katherine Scott'],
    description:
      'Robotics is a fast growing and rewarding field that is desperate for more engineering talent, but very few engineers know how to make the leap. New developers are often scared off because they don\u2019t have the knowledge of electrical or mechanical engineering or they have heard the field is very difficult. Fortunately,recent improvements in both cloud robotics tools and robotic simulation have made it easier than ever to learn robotics. Recently, Robot Operating System (ROS) released its second version, ROS 2, in conjunction with its next generation simulation platform, Ignition Gazebo. This new version of ROS now supports Python 3 from the ground up. These releases make it possible to seamlessly toggle between simulated and real robots. \r\n \r\nIn this talk we\u2019ll give you a crash course on how to build and run a simulated ROS 2 robot using Python 3. We\u2019ll start by putting together a simple mobile base robot with a simulated sensor payload. Once we\u2019ve put our virtual robot together we\u2019ll walk through how to make the robot move, how to read data from the sensors, and how to \u201cclose the loop\u201d by using sensor data to drive the robot\u2019s behavior. In addition to covering the ROS 2 APIs, we\u2019ll give a brief overview of the ROS command line tools, build system, and launch utilities so users can get familiar with the ROS development process.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/140/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:10:00',
    end: '2020-04-17T12:55:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 84,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['william@yossarian.net'],
    name: 'Bringing Two Factor Authentication to PyPI',
    authors: ['William Woodruff'],
    description:
      "Since March, `$speaker` has worked with the PSF and PyPA to implement and land major security improvements in Warehouse, the codebase that drives PyPI. This talk will cover just one of those improvements: the addition of two factor authentication to user login. Attendees will learn about the technical details of two factor schemes, the security properties they can (and can not) provide, and the process for making major changes to core Python infrastructure. Attendees will take away knowledge about the Warehouse codebase, which 2FA schemes they should be using, and do's and don'ts for good user experience with two-factor authentication.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/101/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:10:00',
    end: '2020-04-18T12:55:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 124,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['peter@pdmccormick.com'],
    name: 'Prototyping new Python language features in pure Python',
    authors: ['Peter McCormick'],
    description:
      'We all use the Python language to write programs, but have you ever thought about trying to change the _language_ itself? Perhaps you have wondered, _"What would Python be like if it adopted my favourite feature from another language?"_ Or, maybe you have dreamt up an exciting new addition to the language that you are certain other developers would love to use, if only there was a way they could actually trying using it first. In this talk you will learn how you too can become a programming language explorer and create experimental new dialects of the Python language that you can actually write real code in and run, all using pure Python.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/174/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:10:00',
    end: '2020-04-18T12:55:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 134,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['shaunagm@gmail.com'],
    name: 'Organizing To Improve Your Workplace: Know Your Rights',
    authors: ['Shauna Gordon-McKeon'],
    description:
      'If there\u2019s a problem with your code, you can file a bug report. But what do you do when there\u2019s a problem with your workplace?\r\n\r\nAll workers, including tech workers, have the right to try and improve our workplaces. This talk will give you an overview of your rights, with a special focus on issues that commonly arise in the tech industry, such as workplace harassment, overuse of non-disclosure agreements and forced arbitration clauses, and misclassification of contractors. We\'ll also talk about what you can do when your company does something unethical, following the "Bargaining for the Common Good" model used by workers around the country to fight poverty, systemic racism, and climate change.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/115/',
    cancelled: false,
  },
  {
    room: 'Room 319, Room 318, Room 317, Room 316, Room 315, Room 310/311, Room 309, Room 320',
    rooms: [
      'Room 319',
      'Room 318',
      'Room 317',
      'Room 316',
      'Room 315',
      'Room 310/311',
      'Room 309',
      'Room 320',
    ],
    start: '2020-04-15T12:20:00',
    end: '2020-04-15T13:20:00',
    duration: 60,
    kind: 'lunch',
    section: 'tutorials',
    conf_key: 33,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch Break',
  },
  {
    room: 'Room 319, Room 318, Room 317, Room 316, Room 315, Room 310/311, Room 309, Room 320',
    rooms: [
      'Room 319',
      'Room 318',
      'Room 317',
      'Room 316',
      'Room 315',
      'Room 310/311',
      'Room 309',
      'Room 320',
    ],
    start: '2020-04-16T12:20:00',
    end: '2020-04-16T13:20:00',
    duration: 60,
    kind: 'lunch',
    section: 'tutorials',
    conf_key: 34,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch Break',
  },
  {
    room: 'Room 330, Room 408',
    rooms: ['Room 330', 'Room 408'],
    start: '2020-04-16T12:20:00',
    end: '2020-04-16T13:20:00',
    duration: 60,
    kind: 'meal',
    section: 'hatchery',
    conf_key: 220,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch Break',
  },
  {
    room: 'Room 401, Room 402, Room 403, Room 404, Room 405',
    rooms: ['Room 401', 'Room 402', 'Room 403', 'Room 404', 'Room 405'],
    start: '2020-04-16T12:30:00',
    end: '2020-04-16T13:30:00',
    duration: 60,
    kind: 'lunch',
    section: 'sponsor-workshops',
    conf_key: 48,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:40:00',
    end: '2020-04-18T13:40:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 155,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room 330',
    rooms: ['Room 330'],
    start: '2020-04-17T12:40:00',
    end: '2020-04-17T13:40:00',
    duration: 60,
    kind: 'meal',
    section: 'hatchery',
    conf_key: 226,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:40:00',
    end: '2020-04-18T13:40:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 145,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room 409',
    rooms: ['Room 409'],
    start: '2020-04-17T12:40:00',
    end: '2020-04-17T13:40:00',
    duration: 60,
    kind: 'meal',
    section: 'hatchery',
    conf_key: 215,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:40:00',
    end: '2020-04-17T13:55:00',
    duration: 75,
    kind: 'meal',
    section: 'talks',
    conf_key: 199,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:40:00',
    end: '2020-04-17T13:40:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 105,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:40:00',
    end: '2020-04-17T13:40:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 95,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:55:00',
    end: '2020-04-18T13:55:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 115,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room 408',
    rooms: ['Room 408'],
    start: '2020-04-17T12:55:00',
    end: '2020-04-17T13:55:00',
    duration: 60,
    kind: 'meal',
    section: 'hatchery',
    conf_key: 232,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:55:00',
    end: '2020-04-17T13:55:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 75,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-17T12:55:00',
    end: '2020-04-17T13:55:00',
    duration: 60,
    kind: 'meal',
    section: 'hatchery',
    conf_key: 229,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:55:00',
    end: '2020-04-17T13:55:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 65,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:55:00',
    end: '2020-04-18T13:55:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 135,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T12:55:00',
    end: '2020-04-17T13:55:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 85,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T12:55:00',
    end: '2020-04-18T13:55:00',
    duration: 60,
    kind: 'meal',
    section: 'hatchery',
    conf_key: 242,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T12:55:00',
    end: '2020-04-18T13:55:00',
    duration: 60,
    kind: 'meal',
    section: 'talks',
    conf_key: 125,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lunch',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:10:00',
    end: '2020-04-19T13:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 165,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['kas.stohr@simonandschuster.com', 'mohammed.khan@simonandschuster.com'],
    name:
      '\u201cRun All\u201d: How to build user-friendly applications using just Python 3 and Jupyter Notebooks',
    authors: ['Kas Stohr', 'Yusuf Khan'],
    description:
      'Jupyter Notebooks have become the workhorse IDE of choice for data science and analytics teams. Most data scientists use them for running analysis, but few take advantage of the full power of Jupyter Notebooks user interface layer. In this talk we share how to build applications using Jupyter Notebook as the front-end interface for everyday users. While the base coding language is Python, we take advantage of the Javascript layer of Jupyter Notebook\u2019s interface to deliver fully interactive notebooks-as-an-application. \r\n\r\nThe talk will cover everything from setting constants and variables, to creating user-friendly input widgets to testing and deployment. Using Python 3 and Jupyter Notebooks, teams can democratize data analysis, empowering subject matter experts and non-technical users to perform complex data analysis. \r\n\r\nDeveloper team: Kas Stohr, Yusuf Khan, Yicen Shi, Clint Green, Miguel Galeano, Sophie Richards\r\n\r\n**Requirements:** \r\n\r\n - Python 3.7  \r\n - Jupyter Notebooks /Jupyter Lab\r\n - Plot.ly  \r\n - ipywidgets\r\n - Docker \r\n - *JavaScript code snippets (as required by the project, we\u2019ll give a few helpful examples.)',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/156/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:10:00',
    end: '2020-04-19T13:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 168,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['james@b-list.org'],
    name: "A \ud83d\udc0d's guide to Unicode",
    authors: ['James Bennett'],
    description:
      "Unicode can seem like a scary topic, especially since people so often talk about it as a horrendously complex thing programmers should be afraid of \ud83d\ude31. But while Unicode does have some complexity, it doesn\u2019t have to be scary! So this talk will demystify it: you'll get to wave hello \ud83d\udc4b to Unicode, learn what it really is, how it works, and tips for how you can \u2764\ufe0f Unicode in \ud83d\udc0d.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/153/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:10:00',
    end: '2020-04-19T13:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 171,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['pycon-det43c@heyitsmike.com'],
    name: 'How to Do Code Reviews Like a Human',
    authors: ['Michael Lynch'],
    description:
      'Are code reviews a source of tension on your team? Do they lead to conflict, bikeshedding, and wasted time?\r\n\r\nMost of the discussion we hear about code reviews is technical. We focus myopically on minimizing cost and maximizing bug discoveries. But reviews are as much a social exercise as a technical one. They\u2019re an opportunity for teammates to share knowledge and bond through collaboration. That can\u2019t happen if people are strangling each other over where to place the curly braces.\r\n\r\nIn this talk, you\u2019ll learn practical techniques to improve communication and minimize conflict during code reviews. I\u2019ll talk about:\r\n\r\n* Reducing human effort of reviews through automation\r\n* Increasing your team\u2019s review velocity\r\n* Giving sincere praise\r\n* Framing discussions for constructive debate\r\n* Mitigating stalemates',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/92/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:10:00',
    end: '2020-04-19T13:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 174,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['bachmann.matt@gmail.com'],
    name: 'Transitioning from developing software to developing people: A firsthand experience',
    authors: ['Matthew Knapp Bachmann'],
    description:
      'Developing your career is building skills to grow the impact you have on an organization. After a certain point engineers typically decide to either go down an individual contributor path or a management one. Recently, I decided to try engineering management. My company had me manage six engineers in a recently formed team. In my first six months as a manager I developed the team\u2019s process for getting work done, learned the basics of managing career development, and positioned my team within the larger engineering organization. I also learned about balancing competing priorities and moving a diverse set of personalities and desires towards a common goal. \r\n    In this talk I intend to talk specifically about the role of a manager of a single team. I will go over the types of problems a manager is responsible for and discuss the value a good manager can bring to a team/organization. I will help attendees understand the perspective of their current manager and help them decide if management is something they would be interested in trying out themselves.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/106/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:10:00',
    end: '2020-04-19T13:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 162,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['jlehtosalo@gmail.com'],
    name: 'Getting the most out of mypy and static type checking',
    authors: ['Jukka Lehtosalo'],
    description:
      "Ever wondered if you should try type checking in your Python project, or what it takes to get started with mypy? Or maybe you've started using type hints but are not sure whether you are doing it effectively? I will show how to introduce type checking the easy way, and give pointers about moving beyond the basics.\r\n\r\nDropbox was an early adopter of type checking and mypy, and we\u2019ve been gradually adding type annotations to our large production codebases since 2016. Engineers love how type annotations improve the clarity of code, and how mypy can surface hard-to-find bugs. We\u2019ve learned a lot in the process of annotating millions of lines of code, and in this talk you\u2019ll learn battle-tested approaches for adding type checking to an existing codebase (or to a new project!).\r\n\r\nI expect no previous experience with mypy. You\u2019ll benefit the most if you\u2019ve worked on a project with multiple developers.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/163/',
    cancelled: false,
  },
  {
    room: 'Room 320',
    rooms: ['Room 320'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 25,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['ericmajinglong@gmail.com'],
    name: 'Demystifying Deep Learning for Data Scientists',
    authors: ['Eric J. Ma'],
    description:
      'Have you ever wondered what goes on behind the scenes of a deep learning framework? Or what is going on behind that pre-trained model that you took from Kaggle? Then this tutorial is for you! In this tutorial, we will demystify the internals of deep learning frameworks - in the process equipping us with foundational knowledge that lets us understand what is going on when we train and fit a deep learning model. By learning the foundations without a deep learning framework as a pedagogical crutch, you will walk away with foundational knowledge that will give you the confidence to implement any model you want in any framework you choose.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/73/',
    cancelled: false,
  },
  {
    room: 'Room 310/311',
    rooms: ['Room 310/311'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 27,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['stuart@swilliams.ca'],
    name: 'Python Epiphanies',
    authors: ['Stuart Williams'],
    description:
      'Learning Python is easy for many, but getting past an intermediate level can be frustrating, and many intermediate users are sometimes surprised by features they thought they understood.\r\n\r\nThis tutorial clarifies namespaces, compares patterns for structuring code (callbacks, decorators, coroutines, etc.), and explores Python bytecode, monkey patching, decorators, metaclasses, and descriptors.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/48/',
    cancelled: false,
  },
  {
    room: 'Room 320',
    rooms: ['Room 320'],
    start: '2020-04-15T13:20:00',
    end: '2020-04-15T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 17,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['matthewharrison@gmail.com'],
    name: 'Hands-on Python for Programmers',
    authors: ['Matt Harrison'],
    description:
      'Are you new to Python? Or do you feel like you grok the syntax, but would like to understand new idioms or where to use them? Want to watch an experienced Python developer create code from nothing? Instead of just covering the syntax, we will introduce most of Python as we build code together.\r\n\r\nBring your laptop, and we will program a predictive text engine from scratch together. Follow along as we start with IDLE (or your favorite editor) and a blank file and end with a tested, idiomatic Python module that will learn from any text we pass into it, and predict characters or words for us.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/53/',
    cancelled: false,
  },
  {
    room: 'Room 316',
    rooms: ['Room 316'],
    start: '2020-04-15T13:20:00',
    end: '2020-04-15T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 21,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['trey@treyhunner.com'],
    name: "Python 3 Habits: What To Do After You've Upgraded",
    authors: ['Trey Hunner'],
    description:
      "Congratulations on upgrading to Python 3: now that you've upgraded, what features should you start embracing and what old habits should you leave behind?\r\n\r\nIn this tutorial we'll attempt to take our Python 2-focused brains and reconfigure them to think like Python 3 does. If you feel like you're writing Python 3 code while still thinking in terms of Python 2, this tutorial is for you.\r\n\r\nWe'll over a dozen examples of working Python 2 code and refactor these bits of code to embrace new Python 3 features that are often overlooked after upgrading.\r\n\r\nWe'll cover:\r\n\r\n1. Numeric and math changes\r\n2. String improvements\r\n3. Distinguishing unicode from bytes\r\n4. The many new argument packing and unpacking idioms\r\n5. Changes with classes\r\n6. Iterators and Lazy Iterables\r\n7. Improvements to standard library modules\r\n8. Various Python 3 anti-patterns\r\n\r\nYou'll walk out of this tutorial with hands-on Python 3 refactoring experience and more exercises to do when you go home.\r\n\r\n**Note**: This tutorial is for folks who've already migrated their Python 2 code to Python 3 and will drop (or have dropped) Python 2 support. We will not cover the upgrading process and we will not cover working with code that works in both Python 2 and Python 3.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/68/',
    cancelled: false,
  },
  {
    room: 'Room 315',
    rooms: ['Room 315'],
    start: '2020-04-15T13:20:00',
    end: '2020-04-15T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 20,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['katie@glasnt.com'],
    name: 'Deploying Django on Serverless Infrastructure',
    authors: ['Katie McLaughlin'],
    description:
      'Taking your DjangoGirls workshop website and hosting it on the Cloud is complex. Not complicated, just complex. The statefulness of Django out of the box compared to other Python web frameworks makes the migration from your own laptop to a hosted platform non-trivial. \r\n\r\nIn this tutorial, we will take a sample Django project from source control and local deployment to a hosted service using serverless infrastructure. This tutorial will use Google Cloud Platform, but concepts can be applied to any cloud platform.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/62/',
    cancelled: false,
  },
  {
    room: 'Room 317',
    rooms: ['Room 317'],
    start: '2020-04-15T13:20:00',
    end: '2020-04-15T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 22,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['grishma.jena@gmail.com'],
    name: "A beginner's guide to befriending Python",
    authors: ['Grishma Jena'],
    description:
      "Heard about the new stranger in town - Python? Think it's pretty cool and want to become friends with it? You are in the right place! This workshop takes you through the journey of meeting Python for the first time to becoming friends or even best friends with it. You will be introduced to foundational concepts and other building blocks for Python. Learn about syntax, input/output, control flow, and data structures along with slightly more advanced concepts like functions and classes. There are bonding exercises (read: fun mini-projects) and examples along the way to aid your learning and to get to know Python better.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/54/',
    cancelled: false,
  },
  {
    room: 'Room 408',
    rooms: ['Room 408'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'summit',
    section: 'hatchery',
    conf_key: 222,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Python Packaging Summit](/2020/hatchery/packaging/)',
  },
  {
    room: 'Room 318',
    rooms: ['Room 318'],
    start: '2020-04-15T13:20:00',
    end: '2020-04-15T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 23,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['tom.w.augspurger@gmail.com', 'mrocklin@gmail.com'],
    name: 'Scalable Computing with Dask',
    authors: ['Tom Augspurger', 'Matthew Rocklin'],
    description:
      "Python is a great language for data analysis. We have a rich ecosystem of libraries like pandas, NumPy, and scikit-learn with nice APIs and great performance. However, these libraries are mostly limited to in-memory datasets and often use just a  single CPU core on a single machine.\r\n\r\nWe'll introduce Dask, a library that natively scales Python. Every attendee will be given their own Dask cluster to analyze larger-than-memory datasets using familiar APIs and tools. We'll see how Dask works with libraries like NumPy, pandas, and scikit-learn to scale out to larger problems.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/55/',
    cancelled: false,
  },
  {
    room: 'Room 310/311',
    rooms: ['Room 310/311'],
    start: '2020-04-15T13:20:00',
    end: '2020-04-15T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 19,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['adamenglander@yahoo.com'],
    name: 'Bigger, Better, Faster, More! Building Applications in Python',
    authors: ['Adam Englander'],
    description:
      "Bigger, better, faster, and more are what's expected of application developers in every language. There are some development methodologies and associated tools that have proven themselves in providing a framework for quickly building large and complex applications in  Python while reducing defects and improving overall quality. Let's take a quick dive in the pool of Behavior Driven Development (BDD), Test Driven Development (TDD), and Domain Driven Design (DDD) by building a quick Flask application.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/56/',
    cancelled: false,
  },
  {
    room: 'Room 309',
    rooms: ['Room 309'],
    start: '2020-04-15T13:20:00',
    end: '2020-04-15T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 18,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['kevin@dataschool.io'],
    name: 'Better Machine Learning through Effective Preprocessing with scikit-learn',
    authors: ['Kevin Markham'],
    description:
      "You have some experience building Machine Learning models, but only with artificially clean training data. How do you make the leap to **building models using dirty, real-world data?**\r\n\r\nIn this tutorial, you'll learn how to correctly and efficiently **prepare complex datasets for Machine Learning** using scikit-learn. You'll practice handling missing values, text data, categorical data, and data that needs standardization. Most importantly, you'll learn how to **build a coherent, reusable pipeline of preprocessing steps** that starts with a pandas DataFrame and ends with a trained scikit-learn model.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/57/',
    cancelled: false,
  },
  {
    room: 'Room 319',
    rooms: ['Room 319'],
    start: '2020-04-15T13:20:00',
    end: '2020-04-15T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 24,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['mitzi212@gmail.com'],
    name: 'Test-Driven Bayesian Model Development',
    authors: ['Mitzi Morris'],
    description:
      'Probabilistic programming languages (PPLs) like Stan, Pyro, and PyMC3 implement complex, custom statistical models as programs that make estimates and predictions used to support critical business, scientific, and policy decisions. Like all programs, probabilistic programs must be tested.  This tutorial shows how to test the correctness of your program, data, and predictions.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/58/',
    cancelled: false,
  },
  {
    room: 'Room 315',
    rooms: ['Room 315'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 28,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['zac.hatfield.dodds@gmail.com'],
    name: 'Introduction to Property-Based Testing',
    authors: ['Zac Hatfield-Dodds'],
    description:
      "Has testing got you down?  Ever spent a day writing tests, only to discover that you missed a bug because of some edge case you didn't know about?  Does it ever feel like writing tests is just a formality - that you already know your test cases will pass?\r\n\r\nProperty-based testing might be just what you need!\r\n\r\nAfter this introduction to property-based testing, you'll be comfortable with Hypothesis, a friendly but powerful property-based testing library. You'll also known how to check and enforce robust properties in your code, and will have hands-on experience finding real bugs.\r\n\r\nWhere traditional example-based tests require you to write out each exact scenario to check - for example, `assert divide(3, 4) == 0.75`, property-based tests are *generalised* and *assisted*.  You describe what kinds of inputs are allowed, write a test that should pass for any of them, and Hypothesis does the rest!\r\n\r\n```python\r\nfrom hypothesis import given, strategies as st\r\n@given(a=st.integers(), b=st.integers())\r\ndef test_divide(a, b):\r\n     result = a / b\r\n     assert a == b * result\r\n```\r\n\r\nThere's the obvious `ZeroDivisionError`, fixable with `b = st.integers().filter(lambda b: b != 0)`, but there's another bug lurking.  Can you see it?  Hypothesis can!",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/69/',
    cancelled: false,
  },
  {
    room: 'Room 330',
    rooms: ['Room 330'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'summit',
    section: 'hatchery',
    conf_key: 224,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: "[Regional Conference Organizers' Summit](/2020/hatchery/organizers/)",
  },
  {
    room: 'Room 316',
    rooms: ['Room 316'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 29,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['ellie.daw@crimsonvista.com', 'seth@crimsonvista.com'],
    name: 'Correct Cryptography in Python, a Tutorial for Cryptography Beginners',
    authors: ['Ellie Daw', 'Seth James Nielson'],
    description:
      'Cryptography is commonplace in technology today, from storing passwords in application development to checksums for downloadable content, it is paramount that cryptography is implemented correctly. Unfortunately, Cryptography is very easy to get wrong and very difficult to get right.\r\n\r\nIn this tutorial, we will show how to use a number of common cryptographic primitives, but we will also work through examples of breaking misconfigured/misunderstood cryptography in class. We will start with simple hash functions, work through symmetric and asymmetric cryptography, and talk about how these mechanisms are combined in common protocols, such as TLS and Kerberos. As we walk through all of the interesting ways in which cryptographic technologies have been misused or proven exploitable, the attendee will gain a greater appreciation for how fragile these kinds of operations really are.\r\n\r\nAttendees will walk out of this workshop with foundational cryptography knowledge that will enable them to practice and experiment with cryptography, write scripts for testing/analyzing cryptographic deployments, and the ability to better understand the cryptographic world around them. While this course will emphasize all the reasons why beginners should not be using ANYTHING we teach in production code, it will enable the learner to improve their understanding and ability to interact with cryptographic systems.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/67/',
    cancelled: false,
  },
  {
    room: 'Room 317',
    rooms: ['Room 317'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 30,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['pablo@r2c.dev'],
    name: 'Good to the Last Drop: Writing Robust Flask Apps',
    authors: ['Isaac Evans'],
    description:
      'Building it right the first time doesn\u2019t have to be hard! During this hands-on tutorial, you\u2019ll learn about developing robust Flask apps, common Flask \u201cgotchas\u201d, and concrete best-practices with detailed instructions to avoid them. A guided tour of tools that always keep an eye on your code and ensure you follow these practices will set you on the path to Flask success!',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/70/',
    cancelled: false,
  },
  {
    room: 'Room 318',
    rooms: ['Room 318'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 31,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['mariatta@python.org'],
    name: 'Say it with Bots!',
    authors: ['Mariatta'],
    description:
      "Let's build a GitHub bot that can greet contributors to your project. As humans, we can't always be up and running 24/7. It can be nice for your contributors if they can receive prompt response from you regarding their pull request instead of waiting until you're back.\r\n\r\nIn this tutorial, we'll go through several activities for building a GitHub App that can be easily installed in various repositories.\r\n\r\nYour GitHub bot can:\r\n- thank the maintainer for installing the bot\r\n- thank first time contributors for making a pull request to your repository\r\n\r\nLearn about GitHub APIs, GitHub Apps, and authentications through these fun activities! We'll be using Python libraries like gidgethub, aiohttp, and asyncio. F-strings included!",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/71/',
    cancelled: false,
  },
  {
    room: 'Room 309',
    rooms: ['Room 309'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 26,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['halmouba@andrew.cmu.edu'],
    name: 'Effective Data Visualization',
    authors: ['Husni Almoubayyed'],
    description:
      'From picking the right plot for the particular type of data, statistic, or result; to pre-processing sophisticated datasets, and even making important decisions about the aesthetic of a figure, visualization is both a science and art that requires both knowledge and practice to master.\r\n\r\nThis tutorial is for python users who are familiar with python and basic plotting, and want to build strong visualization skills that will let them effectively communicate any data, statistic, or result. \r\n\r\nWe will use python libraries such as `seaborn`, `matplotlib`, `plotly`, and `sklearn`; and discuss topics such as density estimation, dimensionality reduction, exploring similar datasets, interactive plotting, and making suitable choices for communication. Drawing examples from datasets in the scientific, financial, geospatial (mapping) fields and more.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/74/',
    cancelled: false,
  },
  {
    room: 'Room 319',
    rooms: ['Room 319'],
    start: '2020-04-16T13:20:00',
    end: '2020-04-16T16:40:00',
    duration: 200,
    kind: 'tutorial',
    section: 'tutorials',
    conf_key: 32,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['geirarne@gmail.com'],
    name: 'Introduction to Decorators: Power Up Your Python Code',
    authors: ['Geir Arne Hjelle'],
    description:
      'Python supports functions as first-class objects. This means that functions can be assigned to variables, and passed to and from other functions, just like any other object in Python.\r\n\r\nOne powerful application of this is the decorator syntax, which makes it easy to apply one function to another at compile time. Decorators offer a simple and readable way of adding capabilities to your code. This tutorial will teach you how decorators work, and how to create your own decorators. \r\n\r\nBeing comfortable with using and creating decorators, will make you a more efficient Python programmer. You will learn how a single line sometimes can transform your code: add authentication to your website, write a class for you, or even JIT-compile your long-running calculations.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/75/',
    cancelled: false,
  },
  {
    room: 'Room 405',
    rooms: ['Room 405'],
    start: '2020-04-16T13:30:00',
    end: '2020-04-16T15:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 53,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null, null],
    name: 'NVIDIA: GPU-Accelerated Data Analytics in Python',
    authors: ['Keith Kraus', 'Bartley Richardson'],
    description:
      'As data volumes and computational complexity of data analysis techniques have increased, so has the need for acceleration of these workloads to allow the data scientist to quickly iterate on models. One of the key ways to achieve this has been through GPU acceleration. Traditionally, GPU acceleration has required specialized knowledge of low-level C++ GPGPU programming. However, the open-source RAPIDS data science libraries allow data scientists to easily make use of GPU acceleration in common ETL, machine learning, and graph analytics workloads using familiar Python APIs (e.g. pandas and scikit-learn).\r\n\r\nThis workshop will introduce RAPIDS, walk through its component libraries, and will show participants how these libraries allow them to easily introduce GPU acceleration into their workflows to speed up compute times and increase iteration on their models. We will demonstrate common data ETL (cuDF), machine learning (cuML), graph analytics (cuGraph), signal processing (cuSignal), spatial analytics (cuSpatial), and InfoSec (cyber log accelerator) workloads that RAPIDS accelerates. We will also discuss how users can integrate RAPIDS and the broader open-source GPU data science ecosystem to solve their specific use cases.\r\n\r\nAn understanding of basic data science concepts will be helpful, but is not required. No experience with GPU programming is required!',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/228/',
    cancelled: false,
  },
  {
    room: 'Room 402',
    rooms: ['Room 402'],
    start: '2020-04-16T13:30:00',
    end: '2020-04-16T15:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 50,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: "Slack: Let's build a Slack app!",
    authors: ['Jason Roche'],
    description:
      "In this workshop, we'll guide you through the process and tools needed to build your first Slack app. We'll go over our Python SDKs, walk through an example app and talk about what's going on under-the-hood as your app interacts with Slack's APIs. Whether you're building tools for your team or production Slack apps, we'll help you down the right path.\r\n\r\nThis workshop will be beginner-friendly, but also allow those with prior experience with Slack to learn about new features, tools and ask us questions directly.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/224/',
    cancelled: false,
  },
  {
    room: 'Room 401',
    rooms: ['Room 401'],
    start: '2020-04-16T13:30:00',
    end: '2020-04-16T15:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 49,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null, null],
    name:
      'Microsoft Azure: Optimize your Python & Django apps with easy-to-learn Postgres superpowers',
    authors: ['Sai Srirampur', 'Claire Giordano'],
    description:
      'Building Django applications that perform well and can scale is a challenge all of us developers have. And yet getting performance right is essential to your business and to your work as a developer. In this workshop, we will teach you a few key Postgres superpowers that will enable you to optimize your Python and Django apps. \r\n \r\nJust like chocolate and peanut butter go better together, so do Python and Postgres. So we\u2019ll use Azure Database for PostgreSQL as the underlying database for this workshop. \r\n \r\nThrough interactive exercises, we will walk through what to do in the face of the most common of common pain points: slow queries. We\u2019ll teach you what to look out for, and we\u2019ll do an ORM deep dive into application code to identify performance bottlenecks. Together, we\u2019ll analyze both Python code samples as well as example SQL code. And we\u2019ll explore the power of Azure performance insights, which can be used as a multiplying factor when it comes to performance optimization. Finally, we\u2019ll explain how to scale out your underlying Postgres database horizontally using Hyperscale (Citus), in a way that is transparent to your application and does not require any re-architecture on your part.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/229/',
    cancelled: false,
  },
  {
    room: 'Room 403',
    rooms: ['Room 403'],
    start: '2020-04-16T13:30:00',
    end: '2020-04-16T15:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 51,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'Novetta: Easy State-of-the-Art NLP with AdaptNLP',
    authors: ['Matt Teschke'],
    description:
      'Advances in natural language processing (NLP) over the last year have been fundamentally changing the way we work with text-based data. Amazing libraries such as Transformers (by Hugging Face) and Flair (by Zalando Research) have made it easier to apply the most cutting edge models to generate insights from text data. However, we have found that some users of these libraries still had trouble when adapting these libraries to work with their data.\r\n\r\nTo address this challenge, Novetta developed AdaptNLP, an open source Python framework for applying and retraining NLP models. This framework enables users to apply state-of-the-art pre-trained language models, which can be fine-tuned for text classification, question answering (QA), entity extraction, and part-of-speech tagging. This tutorial will demonstrate how to use AdaptNLP to train a text classifier, train a simple QA model, and combine QA and named entity recognition (NER) to develop a timeline of events from unstructured text.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/250/',
    cancelled: false,
  },
  {
    room: 'Room 404',
    rooms: ['Room 404'],
    start: '2020-04-16T13:30:00',
    end: '2020-04-16T15:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 52,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null, null],
    name:
      'DocuSign: Python + Machine Learning: Implementing a deep-learning based document tagging solution',
    authors: ['Raphael Alabi, PhD', 'Matthew Roknich'],
    description:
      'We report that, in collaboration with Google last year, we created the fastest document tagging solution and successfully deployed it to our production environment. The solution involved using computer vision (CV) in addition to state-of-the-art natural language processing (NLP) algorithms. The CV algorithm enabled us to identify potential tag locations within a document as well as the words contained within the document; while LSTM/BERT based NLP algorithm enabled the correct differentiation of the tags into signature, date and text tags. The architecture is very flexible as it can accommodate more tag differentiations via tuning of the LSTM/BERT models. The architecture is also scalable since inference can be run on multiple GPU\u2019s thus enabling a faster millisecond response from the NLP/CV models.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/251/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T13:40:00',
    end: '2020-04-17T14:25:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 96,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['dean@deanwampler.com'],
    name: 'Ray: A System for High-performance, Distributed Python Applications',
    authors: ['Dean Wampler'],
    description:
      "[Ray](https://ray.io) is an open-source, distributed framework from U.C. Berkeley\u2019s [RISELab](https://rise.cs.berkeley.edu/) that easily scales Python applications from a laptop to a cluster, with an emphasis on the unique performance challenges of ML/AI systems. It is now used in many production deployments. \r\n\r\nI'll explain the problems that Ray solves and useful features it provides, such as rapid distribution, scheduling, and execution of \u201ctasks\u201d and management of distributed stateful \u201cserverless\u201d computing. I'll illustrate how it's used in several ML libraries. You'll learn when to use Ray and how to use it in your projects.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/139/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T13:40:00',
    end: '2020-04-17T14:25:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 106,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['me@lorenamesa.com', 'elaineswong@gmail.com', 'mariatta@python.org'],
    name: '9 Years of PyLadies: Lessons Learned and What Comes Next',
    authors: ['Lorena Mesa', 'Elaine Wong', 'Mariatta'],
    description:
      '9 years ago an initial group of 7 women met at PyCon USA 2011 began the world of what we know today as PyLadies. Since 2011, PyLadies has grown to 100+ chapters worldwide and the growth doesn\u2019t seem to be stopping anytime soon! What has made PyLadies so successful in the past - it\u2019s decentralization and high degree of chapter autonomy - has presented PyLadies with unseen new challenges in 2020 such as burnout, resource stagnation, and ultimately not allowed PyLadies to respond to the global community of 2020.\r\n\r\nJoin regional PyLadies organizers as they present what PyLadies has in store for the future including a global vision for community engagement and open source projects open to all.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/135/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T13:40:00',
    end: '2020-04-18T14:25:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 146,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['emma@plot.ly'],
    name: 'Building interactive applications for image data with Dash and scikit-image',
    authors: ['Emmanuelle Gouillart'],
    description:
      'Images are an important class of data in science or business. Tasks such as quantification of organ geometry in medical imaging, or construction of training sets and pipelines for machine learning models, typically rely on a combination of interactive user annotations and image processing algorithms. In this talk I will present several open-source Python packages for interactive image processing, and how to combine them for advanced applications.\r\n\r\n[Dash](https://dash.plot.ly/) is an open-source framework for building interactive analytical web applications in pure Python (or R). It comes with a set of interactive components which are the bricks from which to build easily custom analytical applications, such as figures using the [plotly visualization library](https://plot.ly/python/), [interactive data tables](https://dash.plot.ly/datatable/), dropdowns, sliders, etc. These components interact together thanks to callbacks fired when a component is modified. After a demo of how to build an application with Dash, I will show how to interact with image data within Dash for exploring image characteristics or annotating images with various kinds of shapes (from rectangular bounding-box selection to freehand-brush painting of objects).\r\n\r\nIn addition, Dash applications can make use of Python data-science packages in order to use advanced algorithms to process user-provided annotations. I will focus mostly on scikit-image, and briefly mention machine learning / deep learning tools as well. [scikit-image](https://scikit-image.org/) is a popular library for processing 2D and 3D images as Numpy numerical arrays, with a focus on scientific imaging and pedagogical example-based documentation. I will show how to use scikit-image for various image processing tasks, from basic preprocessing (e.g. normalizing image geometry or exposure) to advanced object segmentation tasks. I will finally show how combining scikit-image and Dash can result in advanced image processing applications,  which can be written quickly thanks to simple APIs and thorough documentation.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/160/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T13:40:00',
    end: '2020-04-18T14:25:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 156,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['cuducos@gmail.com', 'arianecamilo.alves@gmail.com'],
    name: 'Fighting misuse of public funds one tweet at a time',
    authors: ['Eduardo Vicente Gon\u00e7alves', 'Ariane Camilo Pinheiro Alves'],
    description:
      '[Rosie](https://twitter.com/RosieDaSerenata) is a Twitter bot that tweets suspicions of misuse of public money by Brazilian congresspeople. This project \u2013 which uses Python in all its architecture, from data scraping to data science, including web apps and the bot itself \u2013 is a flagship for civic tech, being the [top GitHub repo under the "politics" category](https://github.com/topics/politics).\r\n\r\nThis talk first offers an overview of its implementation to, later, focus on other elements (than technology) that made the initiative successful: namely the communication strategy based on the philosophy of information, sociology of law and hacktivism. The idea is to share how thriving projects in the civic tech world are cross-functional, mixing both technology, social sciences, and communication in order to use coding and data to tell appealing stories to the general public.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/94/',
    cancelled: false,
  },
  {
    room: 'Room 409',
    rooms: ['Room 409'],
    start: '2020-04-17T13:40:00',
    end: '2020-04-17T17:40:00',
    duration: 240,
    kind: 'summit',
    section: 'hatchery',
    conf_key: 216,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Python Trainers Summit](/2020/hatchery/trainers/)',
  },
  {
    room: 'Room 330',
    rooms: ['Room 330'],
    start: '2020-04-17T13:40:00',
    end: '2020-04-17T17:40:00',
    duration: 240,
    kind: 'coding',
    section: 'hatchery',
    conf_key: 227,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Trans*Code Hack Day](/2020/hatchery/transcode/)',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:50:00',
    end: '2020-04-19T14:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 166,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['grohe43@gmail.com'],
    name: 'Automated tests running too slow? Time to investigate.',
    authors: ['Brian Grohe'],
    description:
      "Automated tests are key to keeping code bases large and small running smoothly. However, as a test suite grows it can start to take more and more time making it seem more like a thorn in the development process rather than a savior. How do we shave down this thorn? Let's explore different tools that we can use to reduce our test time.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/167/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:50:00',
    end: '2020-04-19T14:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 169,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['rliaw@berkeley.edu'],
    name: 'Distributed Hyperparameter Tuning: A Guide',
    authors: ['Richard Liaw'],
    description:
      'Modern deep learning model performance is very dependent on the choice of model hyperparameters, and the tuning process is a major bottleneck in the machine learning pipeline. In this talk, we will first motivate the need for advancements in hyperparameter tuning methods. \r\n\r\nThe talk will then overview standard methods for hyperparameter tuning: grid search, random search, and bayesian optimization. Then, we will motivate and discuss cutting edge methods for hyperparameter tuning: multi-fidelity bayesian optimization, successive halving algorithms (HyperBand), and population-based training.\r\n\r\nThe talk will then present a overview of Tune (http://tune.io/), a scalable hyperparameter tuning system from the UC Berkeley RISELab, and demonstrate about how users can leverage cutting edge hyperparameter tuning methods implemented in Tune to quickly improve the performance of standard deep learning models.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/181/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:50:00',
    end: '2020-04-19T14:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 175,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['bsao@icloud.com'],
    name: 'Polyglot data with python: Introducing Pandas and Apache Arrow',
    authors: ['Robson Luis Monteiro Junior'],
    description:
      'Nowadays Python is synonymous of data, but not necessarily the best choice for some data tasks. For example, exchange data between different ecosystems is one of the challenges for Python. Pandas and NumPy are very efficient and de facto tools to deal with a reasonable amount of data with performance, but they are limited outside of the Python ecosystem. Acquire and exchange data might be painful due to the problem to write slow conversion code or generated unnecessary large files to talk with other ecosystems, likes large CSV files. Apache Arrow playing with Pandas is a great option as technologies that handle these problems with an excellent performance playing natively with Python. This talk aims to show how to work in a heterogeneous environment with data coming from another ecosystem, be handled inside the Python ecosystem and send back to another ecosystem transparently.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/164/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:50:00',
    end: '2020-04-19T14:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 163,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['vmehta94@gmail.com'],
    name: "The Hitchhiker's Guide to CLIs in Python",
    authors: ['Vinayak Mehta'],
    description:
      "Command-line applications and interfaces are used by both newcomers and experienced Python developers everyday. But do you know how they came to be? Hop on to this ship as we go through the CLI galaxy and look at its history, explore the CLI anatomy and discover some Python packages that can help us create them.\r\n\r\nWe\u2019ll then look at some widely used CLIs of our time. And emulate one of them by creating our own CLI using Click. Finally, we'll package it and publish it on PyPI. Are you ready to travel faster-than-light using this ship\u2019s Infinite Improbability Drive? Carry your towel!",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/173/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T13:50:00',
    end: '2020-04-19T14:20:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 172,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['tom@tomchristie.com'],
    name: 'Introducing HTTPX',
    authors: ['Tom Christie'],
    description:
      "HTTPX is a modern HTTP client for Python 3, that handles both HTTP/1.1 and HTTP/2, and includes optional async support.\r\n\r\nWe'll cover:\r\n\r\n* Using `httpx` to make HTTP requests, and an overview of it's functionality.\r\n* Where `httpx` differs from `requests`, and where it does not.\r\n* A walk through of `httpx`'s HTTP/2 support and async support.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/136/',
    cancelled: false,
  },
  {
    room: 'Room 408',
    rooms: ['Room 408'],
    start: '2020-04-17T13:55:00',
    end: '2020-04-17T17:40:00',
    duration: 225,
    kind: 'summit',
    section: 'hatchery',
    conf_key: 233,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Maintainers Summit](/2020/hatchery/maintainers/)',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T13:55:00',
    end: '2020-04-18T14:25:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 126,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['di@python.org'],
    name: 'Static Typing in Python',
    authors: ['Dustin Ingram'],
    description:
      "Python is well-known as a programming language without static types. This means that you don't need to say what a given variable will hold, or whether your function will return a string or an integer (or sometimes one, and sometimes another!). This has historically made Python a very flexible and beginner-friendly language.\r\n\r\nIn this talk, we'll discuss the advantages and disadvantages to a static type system, as well as recent efforts to introduce static typing to Python via optional \"type hints\" and various tools to aid in adding types to Python code. We'll see what this means for Python, for Python programmers, and what the future has in store for Python's type system.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/96/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T13:55:00',
    end: '2020-04-17T14:25:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 86,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['kat@katlings.net'],
    name: 'Pyambic Pentameter: generating rhyming and metered poems with Markov chains and NLTK',
    authors: ['Kathryn Lingel'],
    description:
      "*a strategy to generate a rhyme / without a human spending any time*\r\n\r\nComputers may not yet be able to write poetry with soul, but we can teach them to write poetry with style! By combining Markov chain random text generation with a pronunciation dictionary in Python's Natural Language ToolKit (NLTK), we can generate a poem that has both rhyme and meter.\r\n\r\nRandom text generation is a fun, beginner-friendly project with a lot of potential depth for the curious and creative. This talk will cover how to generate random writing based on a source text, as well as how to use NLTK to enhance the output, and conclude with a brand new Shakespearean sonnet!",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/112/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T13:55:00',
    end: '2020-04-18T14:25:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 116,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['russell@keith-magee.com'],
    name: 'Snakes in a case: Packaging Python apps for distribution',
    authors: ['Russell Keith-Magee'],
    description:
      "So you've written a Python program - a game, a new social media app, or a system administration utility. You think it's great, and you want to share it with the world. But how do you do that? How do you distribute your code to others without needing to document how to set up Python, install dependencies, and run your application?\r\n\r\nIn this talk, you'll learn about **Briefcase**, a tool that can convert a Python project into platform-native installers on macOS, Windows and Linux - and can also target iOS and Android. You'll learn how to use Briefcase to start a new project, or convert an existing project for distribution. You'll also see how Briefcase (and some other recent developments in the Python ecosystem) can assist you during application development.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/126/',
    cancelled: false,
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T13:55:00',
    end: '2020-04-18T17:40:00',
    duration: 225,
    kind: 'coding',
    section: 'hatchery',
    conf_key: 241,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Beginners data workshop for minorities](/2020/hatchery/beginnersdata/)',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T13:55:00',
    end: '2020-04-17T14:25:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 66,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['mjmolinacontreras@gmail.com'],
    name:
      'How to build an intelligent \u201cindoor garden\u201d with microcontrollers, CircuitPython, and IoT.',
    authors: ['Maria Jose Molina-Contreras, phD'],
    description:
      'Most people around the world are getting more and more interested in living a long and healthy life nowadays. And many studies have proven that growing house plants, as long as being a trend, improves health. \r\nThe truth is, we are so busy with work, and even when we get home, that we do not have enough time to properly water our plants when they need it. \r\n\r\nIn this talk, you are going to learn how to build a functional and **beginner friendly** system to keep your plants alive using different **sensors**, **microcontrollers** and **CircuitPython**. \r\n\r\nThis system is going to **water your plants** based on their necessities and, step by step, you are going to add components and functionalities to the system; for instance, you will give your plants \u201ca voice\u201d to inform you about their deficiencies.\r\nMoreover, in this project, you will learn how to create a **Web application** with **Flask**, how to set up a **Raspberry Pi** as a local server and how to use a **cloud IoT service** for **Data Analysis**.\r\n\r\nFinally, you will see how **Circuitpython** can play an amazing role in these kind of situations, by helping plants to survive longer, and by making our responsibility lighter. This will also help you to understand that it is an excellent choice to **start programming hardware** and connected devices for **everyone!**',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/103/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T13:55:00',
    end: '2020-04-18T14:25:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 136,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['deboraazevedoo@gmail.com'],
    name: 'How PyLadies Brazil became the biggest PyLadies chapter of the world',
    authors: ['D\u00e9bora Azevedo'],
    description:
      "Initiatives concerned about gender disparity have been gaining strength internationally in recent years, and the Brazilian open-source community has stood out in the quantity and effectiveness of actions aimed at these projects, changing the scenario of our regional and national conferences and events. Here in Brazil, the largest country in South America, we also have the biggest PyLadies community of the world (in number of chapters), with around 30 chapters around the country. But how did we get here? How do we manage to have such a huge group of people working together and specially learning from each other to run our activities organically? And more important: what lessons have we taken from doing this for 6 years? In this talk we will summarize some of the history of the creation of PyLadies Brazil, how everything started and the path we follow to this day. During the talk, we\u2019ll learn more about how do we get ladies (and gentlemen) to work together for these changes to happen, how the organizers of the chapters and workshops communicate in order to improve their routines and activities and finally the annual experience sharing meeting we have to gather people who represent the groups to brainstorm ideas of how to make our community better. It will be mentioned all the construction and exchange that takes place within our community, particularities, difficulties and results. Also, we'll talk about the main bumps on the road, specially the ones we face being in the front line of such a huge community, and reflect on how to get and approach new people who are willing to help.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/178/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T13:55:00',
    end: '2020-04-17T14:25:00',
    duration: 30,
    kind: 'charlas',
    section: 'talks',
    conf_key: 200,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['om.cortez.2010@gmail.com'],
    name: 'Empaquetamiento en Python de manera sencilla',
    authors: ['Oscar Cortez'],
    description:
      'La reutilizaci\u00f3n de c\u00f3digo es una necesidad muy com\u00fan. Te ahorra tiempo para escribir el mismo c\u00f3digo varias veces, te ayuda a organizar el c\u00f3digo de forma modular y permite aprovechar el trabajo de otras personas para hacer que sucedan cosas nuevas. Si alguna ves, te preguntaste:\r\n- \u00bfComo crear un paquete en Python?, \r\n- \u00bfQue es PyPI, y por que es importante para el ecosistema?\r\n- \u00bfCual es la funcion de pip?\r\n- \u00bfpip, pipenv, poetry?\r\n\r\nPero sobre todo, \u00bfcomo crear un paquete para Python? Entonces no te pierdas esta charlam en donde, te ense\u00f1are paso a paso sobre como crear uno de ellos, pasaremos de la nada a un paquete que puedes incluir con orgullo en tu perfil para que otras personas lo utilicen.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/82/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T13:55:00',
    end: '2020-04-17T14:25:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 76,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['kimiguel@microsoft.com'],
    name: 'Decoding bias and narrative in competitive video games broadcasts with video analysis',
    authors: ['Kim-Adeline Miguel'],
    description:
      'With video game competitions (also known as eSports) being broadcast on online streams and regular TV stations, in-game video producers have to balance between making the game accessible to casual viewers, and packing enough action on screen to keep regular players interested.  \r\n\r\nWhat they choose to show on screen also define the narratives surrounding the competing teams, building hype around them and setting implicit expectations (for example what character class is shown the most).  \r\n\r\nIn this talk we will walk through video analysis of professional Overwatch games to extract data, explore and validate a few hypotheses on what eSports broadcasters think viewers want to see.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/107/',
    cancelled: false,
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-17T13:55:00',
    end: '2020-04-17T17:40:00',
    duration: 225,
    kind: 'coding',
    section: 'hatchery',
    conf_key: 230,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[Mentored sprints for diverse beginners](/2020/hatchery/mentoredsprints/)',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T14:30:00',
    end: '2020-04-19T15:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 164,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['mnandi92@gmail.com'],
    name: 'The Limitations and Danger of Facial Recognition',
    authors: ['Manojit Nandi'],
    description:
      'Biometric scanners, such as face recognition technology, have seen widespread adoption in applications, such as identifying suspected criminals, analyzing candidate\u2019s facial expressions during job interviews, and monitoring attendance at schools.\r\n\r\nAs these technologies have become more pervasive, many organizations have raised potential concerns about the way these technologies schematize faces. Studies have shown commercial face recognition software has noticeably lower accuracy on darker-skinned individuals, and automatic gender recognition systems regularly misgender trans and non-binary individuals.\r\n\r\nIn addition, many scholars have written about the rise of techno-surveillance and looming threat of constant government tracking of citizens. In this talk, I will discuss these issues, and what we as technologists do to prevent building software that enables harm upon vulnerable populations.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/149/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T14:30:00',
    end: '2020-04-19T15:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 170,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['benjamin@python.org'],
    name: 'Python 2.7: A retrospective',
    authors: ['Benjamin Peterson'],
    description:
      'The Python 2.7.x release series had an abnormally long lifetime for a major Python version. This talk reflects on 10 years of maintaining the last Python 2 release and more broadly on the Python 3 transition.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/93/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T14:30:00',
    end: '2020-04-19T15:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 173,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['daniel.imberman@gmail.com'],
    name: 'Life Beyond Yaml: Bridging Data Science and Data Infrastructure with Apache Airflow',
    authors: ['Daniel Imberman'],
    description:
      'When supporting a data science team, data engineers are tasked with building a platform that keeps a wide range of stakeholders happy. Data scientists want rapid iteration, infrastructure engineers want monitoring and security controls, and product owners want their solutions deployed in time for quarterly reports. Collaboration between these stakeholders can be difficult, as every data science pipeline has a unique set of constraints and system requirements (compute resources, network connectivity, etc). For these reasons, data engineers strive to give their data scientists as much flexibility as possible, while maintaining an observable and resilient infrastructure. \r\n \r\nIn recent years, Apache Airflow (a Python-based task orchestrator developed at Airbnb)  has gained popularity as a collaborative platform between data-centric Pythonistas, and infrastructure engineers looking to spare their users from verbose and rigid yaml files. Apache Airflow exposes a flexible pythonic interface that can be used as a collaboration point between data engineers and data scientists. Data engineers can build custom operators that abstract details of the underlying system and data scientists can use those operators (and many more) to build a diverse range of data pipelines.\r\n \r\nFor this 30 minute talk, we will take an idea from a single-machine Jupyter Notebook to a cross-service Spark + Tensorflow pipeline, to a canary tested, hyper-parameter-tuned, production-ready model served on Google Cloud Functions. We will show how Apache Airflow can connect all layers of a data team to deliver rapid results.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/137/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T14:30:00',
    end: '2020-04-19T15:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 167,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['maggiemoss@fb.com'],
    name: 'Gradual Typing in Practice',
    authors: ['Maggie Moss'],
    description:
      'Type coverage in Python improves readability, finds bugs and supports tooling to improve security and improve developer efficiency. However, driving for type adoption on a rapidly changing codebase under active development can pose several challenges. This presentation will focus on how you can get meaningful results from Pyre as you  move from just a few annotations to a fully typed codebase, and the guarantees we can make along the way. Then, I will discuss the approaches and tools we use to increase type coverage and \u201cstrictify\u201d the Instagram codebase, one of the largest active Python projects.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/155/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-19T14:30:00',
    end: '2020-04-19T15:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 176,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['dino@visimoconsulting.com'],
    name: 'Lessons Learned from Scaling Up a Django Project',
    authors: ['Dino Mintas'],
    description:
      'In this talk, I will describe the evolution of one of my team\u2019s web apps powered by Django. While Django comes with several features out-of-the-box that make it attractive and easy to use, some of those features can cause headaches as projects become more complex.\r\n\r\n\r\nI will focus on three features in particular: 1) the Django ORM and its constraints on database design, 2) the implementation of forms, and 3) the default user system. Through simple coding demonstrations, I will cover the scenarios we encountered that pushed the limits of these features, and I will demonstrate some of the possible workarounds. Hopefully, our experience can inspire other small web-development companies to make the most out of Django as their projects grow in scale and complexity.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/146/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T14:35:00',
    end: '2020-04-18T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 127,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['trey@treyhunner.com'],
    name: 'Comprehensible Comprehensions',
    authors: ['Trey Hunner'],
    description:
      "Finding list comprehensions incomprehensible?  Having trouble figuring out when to use list comprehensions or just plain `for` loops? Are your coworkers overusing comprehensions?\r\n\r\nCome to this talk and learn the how, when, and why of list comprehensions.\r\n\r\nWe'll discuss:\r\n\r\n- why list comprehensions exist and why people use them (yes you *can* always use a loop instead)\r\n- how to use list, set, an dictionary comprehensions as well as generator expressions\r\n- when and how to easily turn a `for` loop into a comprehension\r\n- why list comprehensions are often hard to read and how to make your comprehensions readable\r\n- When to use generator expressions instead of list comprehensions\r\n- when and how *not* to use comprehensions (they're not a replacement for all loops)\r\n\r\nComprehensions are a unique tool for a unique task. Even if you dislike them, understanding how they work will help you better understand the Python code you find in the wild.\r\n\r\nYou'll leave this talk with a better appreciation for both the use cases for comprehensions in Python and an understand of when *not* to use them.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/133/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T14:35:00',
    end: '2020-04-17T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 107,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['jjorge@dsic.upv.es'],
    name: '\u201cSorry, Could you repeat that again?\u201d -  Speech Recognition with Python',
    authors: ['Javier Jorge Cano'],
    description:
      'Nowadays, we are surrounded by devices that can listen to us: Alexa, Siri, Cortana, etc, and the interaction with them has become easier and easier, and more intuitive. The first challenge to communicate in a colloquial way with all these devices is to convert the voice signal to text. To do this, several approaches based on searching methods, algorithmic techniques, and machine learning are combined in very smart and interesting ways.\r\n\r\nIn this talk, I will introduce the underneath speech recognition systems that these devices utilize. This will be illustrated with a guided example where we will develop a system to recognize isolated words in Python.\r\n\r\nFinally, I will show how we are implementing these and more advanced techniques in our production systems, providing transcriptions for different companies and institutions, using Python in different parts of the process.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/105/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T14:35:00',
    end: '2020-04-18T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 147,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['cmaureirafredes@gmail.com'],
    name: 'C++ \u2665 Python: from modules to hybrid applications',
    authors: ['Dr. Cristi\u00e1n Maureira-Fredes'],
    description:
      "**Extending Python** with C is a technique that many popular modules use for OS-level operations, serialization, performance, and more, but dealing with C code is **not simple**: you need to take care of memory, understand pointers, and write many lines of code for simple tasks. Luckily for you, there is C++.\r\n\r\n*Wait! Don't be scared!*\r\n\r\nI know maybe you heard bad stories and saw complicated pieces of C++ code, but: are you aware of how C++ has been **evolving**?\r\nThe **latest C++** standards include many **goodies that smell a bit of Python**, and I will show them to you.\r\n\r\nDuring this talk, you will learn how to **include C++** features into CPython modules, how to create **hybrid applications**, and even to extend existent C++ applications with Python, making them **scriptable**.\r\n\r\nThis talk is intended for developers who are familiar with Python and know basic C, but you don't need to know any C++ to take the most out of it.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/111/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T14:35:00',
    end: '2020-04-17T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 97,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['dmitry.figol@gmail.com'],
    name: 'Managing Python dependencies with Poetry',
    authors: ['Dmitry Figol'],
    description:
      'How many different tools do you use to manage Python projects? Is your tooling different for applications compared to libraries? What about dependencies, do you pin them? How can you achieve reproducible builds? How do you update direct and transitive dependencies? How do you package and publish your Python project?  \r\nAll of these questions are important and many Python developers have been using various tools which tackle one or several challenges from the list above.\r\nWhat if I told you that Poetry can replace many of these tools and give you a single command-line interface to manage your Python projects?\r\nThe session will start with explaining the current ecosystem and challenges, then attendees will learn how Poetry fits into this ecosystem compared to other tools. In the demo attendees will see Poetry in action.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/176/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T14:35:00',
    end: '2020-04-18T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 157,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['calvin@sixfeetup.com'],
    name: 'Finite State Machine (FSM) in Django',
    authors: ['Calvin Hendryx-Parker'],
    description:
      'Workflows are super powerful tools for automating business processes online. Our everyday life is full of workflows such as requesting time off from work. Many of these are actually Finite State Machines that move from state to state via transitions. Popular CMS\u2019 such as Plone have rich support for workflows, but now with `django-fsm` we can build quick, lightweight business workflows for our applications. Plus, we have full audit logging and even build visualizations of our workflow to confirm with the business owners generated from the code.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/125/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T14:35:00',
    end: '2020-04-17T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 87,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['rpost@austin.utexas.edu'],
    name: 'Becoming a Polyglot: Lessons from Natural Language Learning',
    authors: ['Rebekah Post'],
    description:
      'English, Python, C++, Spanish \u2013 all languages, right? Wrong? Maybe? Dive into the differences between natural languages (spoken or signed) and programming languages with a linguist and teacher to learn where we can draw on tried and true natural language learning methods to become better developers.\r\n\r\nAs a former linguist and university language instructor, now a programmer, people often assume that my natural language (spoken, signed, or written) learning analysis background made learning to code easier for me. They might say something like \u201cThat makes sense, they\u2019re languages, right? They have syntax.\u201d These casual comments seem true on the surface when talking about parts of speech and data types. But once you dig deeper, it becomes clear that there are important differences between these types of languages despite the shared name. Many skills and methods I have utilized in learning languages and teaching languages as an adult to adults have served me well as a developer. These many areas of overlap that exist in language learning are the main focus of this talk. The second portion addresses key points of divergence between learning a natural language and a programming language that we need to keep in mind in order to not over-generalize.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/132/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T14:35:00',
    end: '2020-04-18T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 117,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['magicalgirl@google.com'],
    name: 'Controlling the world of modular synthesizers using CircuitPython',
    authors: ['Thea Flowers'],
    description:
      'The niche world of modular synthesizers is filled with enthusiastic, creative musicians and boutique electronics designers. I was inspired by the DIY ethic of this community to explore how to connect my love of Python to my passion for electronic music. CircuitPython turned out to be the perfect choice for creating that bridge. With CircuitPython, I was able to design a unique module that allows you to write Python code to control various aspects of a modular synthesizer.\r\n\r\nThis talks covers my journey of designing and building my very first module and how I used CircuitPython as its heart and soul. We\u2019ll cover why CircuitPython was uniquely suited for this purpose, how I used the resources in the CircuitPython community to design my hardware and software, and the challenges of building an open-source Python-based hardware product.\r\n\r\nEven if you know nothing about modular synthesizers or hardware, this talk hopes to be an interesting look into the Python on hardware world.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/113/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T14:35:00',
    end: '2020-04-18T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 137,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['erotemic@gmail.com'],
    name: 'Developing With Doctests',
    authors: ['Jon Crall'],
    description:
      'This talk is about doctests --- a way to embed examples and unit tests in docstrings. I describe what they are, how to write them, and interesting ways in which they can be used. Doctests make it easy to interactively develop code by defining \u201cdemo\u201d inputs which can be copied into IPython. The side effect is a unit test. This is test-driven-development at its best. I explain the technical details of doctest syntax, directives, parsing, and execution.\r\n\r\nUnfortunately, Python\u2019s builtin doctest module has a restrictive syntax, which makes it difficult to use. In the second part of the talk I introduce an alternative: Xdoctest, a new, but stable package for parsing and running doctests (with optional pytest integration). I explain why doctest\u2019s regex-based parser is fundamentally limited and how xdoctest\u2019s ast-based parser is the remedy. I demonstrate how to use xdoctest and discuss its advantages and disadvantages. By the end of this talk you feel confident in writing, running, and developing with doctests.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/114/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T14:35:00',
    end: '2020-04-17T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 67,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['regebro@gmail.com'],
    name: 'Moving big projects to Python 3',
    authors: ['Lennart Regebro'],
    description:
      "Python 2 is no longer maintained. But you have a monster code base with clever tricks and libraries that don't support Python 2, and your data may be stored in a format that is hard to move Python 3. And that's the easy bit.\r\n\r\nThis talk focuses on the process of moving, not the code changes. Because it's the process that is the hard part. How do you get your code in a state where it's ready to move? How do you get the whole team on the boat to Python 3?",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/161/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T14:35:00',
    end: '2020-04-17T15:05:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 77,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['andrew@aeracode.org'],
    name: 'The RFIDiculous Inventory',
    authors: ['Andrew Godwin'],
    description:
      "Have you ever wondered how large warehouses keep track of everything? Or felt like you wanted to label every item you owned and know where it is at all times?\r\n\r\nWe're all familiar with barcodes, but EPC Class 1 Gen 2 (C1G2) is quickly becoming the universal standard for long-range RFID tags - and unlike barcodes, you can read thousands in a second. Point a reader at a box, and it can instantly tell you what's in there.\r\n\r\nThis talk will explore interacting with C1G2 tags using a variety of hardware - off the shelf commercial hardware, using Python to consume its serial interface or its raw network interface, as well as custom-built microcontrollers with a C runtime talking to a Django site over HTTP.\r\n\r\nWe'll see the intricacies of using Python with serial devices, look at how we can use Python to quickly and efficiently deduplicate and classify tags, and learn exactly how bad null bytes are when you accidentally send them to Django. And, along the way, you'll learn a bit about the RFID technology that's seeping into our lives, and the privacy implications it brings with it.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/131/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T14:35:00',
    end: '2020-04-17T15:05:00',
    duration: 30,
    kind: 'charlas',
    section: 'talks',
    conf_key: 201,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['hi@xmunoz.com'],
    name: 'Detecci\u00f3n automatizada de archivos maliciosos en el repositorio PyPI',
    authors: ['Cristina Mu\u00f1oz'],
    description:
      'En Septiembre 2019, la Fundaci\u00f3n Python ([Python Software Foundation](https://www.python.org/psf/)) lanz\u00f3 una [Solicitud de Propuestas](https://github.com/python/request-for/blob/master/2019-Q4-PyPI/RFP.md) para el desarrollo de funcionalidades cr\u00edticas de seguridad en el software del Python Packaging Index ([PyPI](https://pypi.org/)). Esto se produjo en respuesta despu\u00e9s de que Hackers distribuyeran contenido malicioso a trav\u00e9s del repositorio PyPI.\r\n\r\nDesde typosquatting a la ejecuci\u00f3n de c\u00f3digo arbitrario. En esta charla, vamos a revisar los vectores de ataque m\u00e1s populares utilizados por Hackers para confundir a los usuarios y aprovecharse de ellos. Teniendo en cuenta estos ataques, vamos a describir el nuevo sistema de detecci\u00f3n automatizada integrado en el repositorio PyPI, y, en particular, los tipos de chequeos que ya se encuentran instrumentadas, concluyendo con una explicaci\u00f3n de c\u00f3mo usted puede combatir el malware en el repositorio PyPI.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/81/',
    cancelled: false,
  },
  {
    room: 'Room 401, Room 402, Room 403, Room 404, Room 405',
    rooms: ['Room 401', 'Room 402', 'Room 403', 'Room 404', 'Room 405'],
    start: '2020-04-16T15:00:00',
    end: '2020-04-16T15:30:00',
    duration: 30,
    kind: 'break',
    section: 'sponsor-workshops',
    conf_key: 54,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-19T15:10:00',
    end: '2020-04-19T15:30:00',
    duration: 20,
    kind: 'plenary',
    section: 'talks',
    conf_key: 193,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Python Software Foundation Community Report and Community Service Awards',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T15:15:00',
    end: '2020-04-18T15:45:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 148,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['dharhas@quansight.com', 'kcpevey@quansight.com', 'tpotts@quansight.com'],
    name: 'Analyzing 200 billion GPS Points with Python on the Cheap',
    authors: ['Dharhas Pothina', 'Kim Pevey', 'Tyler Potts'],
    description:
      'There are many blog posts out there that teach you how to create a map or analyze your fitbit data using Python, but what do you do when instead of a couple of thousand GPS points you have 200 billion? Explore how you can scale up your analysis in the cloud without having to learn lots of new skills. As a bonus, learn how to visualize datasets of an unusual size (i.e. very big). \r\n\r\nWe will explore different strategies using open source tools and discuss the pros and cons of each approach. We will also tell you which we picked and why. We will cover Dask and Ibis with both GPUs and CPUs as well as strategies for data storage.\r\n\r\nNote: While we specifically focus on geospatial data, the talk will be relevant for anyone familiar with Pandas and needing to scale to larger datasets.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/168/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T15:15:00',
    end: '2020-04-17T16:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 68,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['sj@mail.rit.edu', 'mel@melchua.com'],
    name:
      'Mismatches and tensions: what PyPI can teach us about open source infrastructure sustainability',
    authors: ['Stephen Jacobs', 'Mel Chua'],
    description:
      "Digital infrastructure is magical in the same way plumbing is: if it's working correctly, you barely notice it at all. Unfortunately, this also makes it easy to overlook the fragile maintenance situations of many mission-critical FOSS infrastructure projects, which may be held together by a single volunteer who suddenly finds themselves Dealing With Life. Furthermore, the unique qualities of infrastructure (services as opposed to libraries, applications, etc.) and FOSS project histories and cultural values (freedom!) require some different approaches to conceptualizing sustainability, maintainership, and what it means to improve both those things.\r\n\r\nThe stories of PyPI combine to create a case study of a successful FOSS digital infrastructure overhaul -- an extraordinarily difficult feat. This talk is based on a research project funded by the Ford and Sloan foundations that draws from an open-licensed corpus of interviews with PyPI developers and users to point out tensions and mismatches common to FOSS infrastructure projects. In turn, these tensions and mismatches challenge us to question and sharpen our understandings of what sustainability and maintainership might mean. We'll examine the implications of these findings for PyPI, Python, and other FOSS digital infrastructure projects and the people who rely on them. And there will be storytime -- plenty of it.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/108/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T15:15:00',
    end: '2020-04-18T15:45:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 158,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['rebecasaraiaguiar@gmail.com'],
    name: 'Privacy-preserving methods: Building secure projects',
    authors: ['Rebeca Sarai'],
    description:
      'Customers\u2019 data is important. The number of privacy laws in recent years has grown from 20 to 100, to name a few: PCI compliance in the payment industry, the European GDPR regulation, and the Brazilian LGPD. All these new regulations attempt to bridge an old gap: data anonymity. How to handle data and protect the individuals comprised in it? Companies often face lawsuits to compensate for personal information breaches in their database. \r\n\r\nMany times production data is copied onto test, QA or staging environments, only to be followed by exposure to the eyes of testers, receivers, or unauthorized developers on machines less protected than production environments. It is not seldom for files also to be shared with external partners, who often require but a small part of the data transferred, and granting access to user\u2019s data might be a breach. If in one hand sharing data is both necessary and inevitable, on the other technologies that assure the privacy of individuals details are no longer only desirable, but essential.\r\n\r\nIn this talk, we will approach two important topics: how to manage data whilst securing users\u2019 personal information and how to do it in machine learning models. Exposing different techniques of anonymization and pseudonymization (k-anonymity, differential privacy, and others), showing that solving the anonymity problem is much more complex than replacing names, last names, and social security numbers.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/142/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T15:15:00',
    end: '2020-04-18T16:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 138,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['reikdas@gmail.com'],
    name: 'Python in High Energy Physics',
    authors: ['Pratyush Das'],
    description:
      'High Energy Physics is the study of the most fundamental constituents of matter and how these elementary particles interact. Often synonymous to Particle Physics, High Energy Physics seeks to find the secrets of the Universe, one of the recent major discoveries being that of the Higgs Boson that confirmed the Standard Model that dictates how all the forces in the Universe interact with each other. High Energy Physics is probably the physics sub-field that has adopted Python most rapidly, only second to Astrophysics.  \r\n\r\nThe talk starts with a look at how computing has looked like in the field of High Energy Physics in the past and how a lot of physicists played major roles in the development of Computer Science. It then explores the emergence of Python as the language of choice for several physicists and two of the major libraries that have been vital to the adoption of Python in the High Energy Physics community - cppyy and uproot. These are especially important since they demonstrate the different ways one could approach shifting the High Energy Physics community from C++ to Python successfully. The talk will focus on a review of where and how Python is used in the High Energy Physics community and how it is slated to look like in the future. \r\n\r\nHigh Energy Physics has its own python toolkit, scikit-hep which comes with a set of python libraries for use by physicists. The Scikit-HEP project is a community-driven and community-oriented project with the aim of providing Particle Physics at large with an ecosystem for data analysis in Python. It is also about improving the interoperability between High Energy Physics tools and the scientific ecosystem in Python. \r\n\r\nThis year is ideal for this particular talk, being the year when according to some available data, Python usage trumps C++ usage in several High Energy Physics experiments at CERN - as some physicists have dubbed it, this is the year of Python in High Energy Physics.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/90/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T15:15:00',
    end: '2020-04-17T16:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 78,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['jdemesy@bishopfox.com', 'dpetro@bishopfox.com'],
    name: 'How Real-world Python Applications Get Compromised',
    authors: ['Joseph DeMesy', 'Dan Petro'],
    description:
      "From templating engines to filesystem interactions, contemporary Python development encompasses an array of moving parts interacting with one another to compose an application. These complex interactions can lead to subtle flaws that result in catastrophic security failures. We'll demonstrate the techniques we use to break into Python web applications and APIs based on real-world examples as well as how to fix these types of issues in your own applications.\r\n\r\nIf you're a developer but haven't seen security from the attacker's perspective before, then this talk will show you the ropes.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/148/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T15:15:00',
    end: '2020-04-18T16:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 128,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['zhaoy@cmu.edu'],
    name: 'Developing Python Libraries for Machine Learning: Best Practices and Lessons Learned',
    authors: ['Yue Zhao'],
    description:
      'The popularity of open-source machine learning (ML) libraries such as scikit-learn and tensorflow speaks to the value of well-developed software in both academia and industry.  However, the need to extend these tools is becoming increasingly important as general-purpose libraries are often hard to adapt for specific use-cases. For example, an accessible Python library for anomaly detection\u2014an important sub-field of machine learning\u2014did not exist until 2017. Possible reasons for this are that it is intimidating to build a machine learning library from the ground-up and resources on the subject are scarce. These issues hinder the advancement of the field and prevent practitioners from applying state-of-the-art research to practical problems. \r\n\r\nIn this talk, we will discuss best practices and the lessons learned through our experience in designing and releasing three popular Python machine learning libraries, which have been used by thousands of people and published in top venues including *the Journal of Machine Learning Research* and *AAAI Conference on Artificial Intelligence* . Specifically, we will focus on three perspectives: extensibility, API design, and scalability. Our goal is to encourage researchers and practitioners to build reliable "wheels" for accelerating machine learning research and development. Audiences are expected to learn: i) the standard procedure for building ML libraries from scratch and ii) best practices to design their own toolboxes.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/165/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T15:15:00',
    end: '2020-04-17T15:45:00',
    duration: 30,
    kind: 'charlas',
    section: 'talks',
    conf_key: 202,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['eric.nahuel.horvat@gmail.com'],
    name: 'Integraciones con Asyncio',
    authors: ['Eric Nahuel Horvat'],
    description:
      'Todos tenemos temor a los terminos integracion o asincronismo. Veni a ver como integrar de manera simple multiples lenguajes a un mismo main software, todo **gracias** a Python 3 y su asincronismo.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/80/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T15:15:00',
    end: '2020-04-17T15:45:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 98,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['mrocklin@gmail.com'],
    name: 'Deploying Python at Scale with Dask',
    authors: ['Matthew Rocklin'],
    description:
      'This talk discusses the challenges and options to scale Python with Dask on distributed hardware.  We particularly focus on how Dask gets deployed on cluster resource managers like Kubernetes, Yarn, and the cloud today.\r\n\r\nThe Python data science stack (Numpy, Pandas, Scikit-Learn and others) has become the gold standard in most data centric fields due to a combination of intuitive high level APIs and efficient low-level code.  However, these libraries were not originally designed to scale beyond a single CPU or data that fits in memory.  Over the last few years the Dask library has worked with these libraries to provide scalable variants, which do run on multi-core workstations or on distributed clusters.  This has allowed advanced users the ability to scale Python to handle 100+TB datasets.\r\n\r\nHowever, deploying Dask within an institution remains a challenge.  How do we balance load across many machines?  How do we share with other distributed systems running on those same machines?  How do we control access and provide authentication and security?  As more institutions adopt Python to handle scalable computation these questions arise with greater urgency.  This talk discusses the options today to deploy Dask securly within an institution on distributed hardware, and dives into some examples where this has had a large positive social impact.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/171/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T15:15:00',
    end: '2020-04-18T16:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 118,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['lukasz@langa.pl'],
    name: 'AsyncIO + Music',
    authors: ['\u0141ukasz Langa'],
    description:
      "Can Python help a musician play hardware instruments? Is there anything specific about AsyncIO that makes it well suited to the task? Come see how AsyncIO can be used to aid music production and realtime performance through MIDI processing.\r\n\r\nWe will cover transformations of incoming MIDI signal, driving hardware instruments with a shared clock, as well as generative music. All production-grade.\r\n\r\nIf you're curious about AsyncIO and wanted to see it in action in a unique setting, this talk is for you! Music theory knowledge not required.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/89/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T15:15:00',
    end: '2020-04-17T16:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 88,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['alexandra@fellow.co'],
    name: 'From 0 to 60 in 2,592,000 seconds: How to quickly get engineers up to speed',
    authors: ['Alexandra Sunderland'],
    description:
      "When anyone starts on a new team, there\u2019s a ramp-up period where a *ton* of knowledge is transferred: there are new processes, names, tools, frameworks, and so many other different details to remember. Meanwhile, critical new relationships are started, and lasting impressions are formed. New team members that don't get to follow a defined process during this time are at risk of not receiving all the information they need to be effective *fast*, and of not feeling valued by their team.\r\n\r\nAs an engineer that loves a good repeatable process, I decided that I\u2019d like to make onboarding engineers a task that is both effective and scalable. If you're bringing on one new engineer or fifty to your project, having a formalized process in place ensures that they can get up to speed on your project quickly, and receive a fair start on the team.\r\n\r\nWhether you're a manager, a lead, or a developer eager to help out, you'll learn how to create your own exceptional onboarding process, and hear about my own onboarding failures and eventual success.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/169/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T15:15:00',
    end: '2020-04-17T15:45:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 108,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['colcarroll@gmail.com'],
    name: 'Getting started with automatic differentiation',
    authors: ['Colin Carroll'],
    description:
      'The _derivative_ is a concept from calculus which gives you the rate of change of a function: for a small change in an input, how much does the output change? This idea turns out to be very important in natural sciences, and is used in many optimization algorithms, which find the maximum or minimum of functions.\r\n\r\nAutomatic differentiation is a technique for computing the derivative of a function. Python has a number of libraries implementing automatic differentiation, many of which are put to use for deep learning, but can be used on their own.\r\n\r\nIn this talk I will give intuition for the derivative and its high dimensional sibling, the _gradient_. We will take a tour of applications, including optimization and computational art, with examples using `jax`, `TensorFlow`, and `PyTorch`. We conclude with a brief description of alternative ways of computing derivatives in Python, and their relative strengths.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/180/',
    cancelled: false,
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-19T15:30:00',
    end: '2020-04-19T16:10:00',
    duration: 40,
    kind: 'plenary',
    section: 'talks',
    conf_key: 194,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Keynote',
  },
  {
    room: 'Room 402',
    rooms: ['Room 402'],
    start: '2020-04-16T15:30:00',
    end: '2020-04-16T17:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 56,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null, null, null],
    name: 'Facebook: Python @Instagram',
    authors: ['Jennifer Taylor', 'Jimmy Lai', 'Mark Vismonte'],
    description:
      'Instagram Server is a several-million-line Python monolith, and it moves quickly: hundreds of commits each day, deployed to production every few minutes.\r\nWe\u2019ve run into a few pain points working with Python at that scale and speed. Come learn about the tips, techniques, and frameworks Instagram uses to develop at scale.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/221/',
    cancelled: false,
  },
  {
    room: 'Room 403',
    rooms: ['Room 403'],
    start: '2020-04-16T15:30:00',
    end: '2020-04-16T17:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 57,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'Google: Google Cloud AI Platform',
    authors: ['Yufeng Guo'],
    description:
      "Looking to get started on building machine learning models on the cloud? Join us for this hands-on session where you'll get to build your own deep learning model on Google Cloud. We'll create a TensorFlow image model and train it at scale, and then deploy your model in the cloud to make predictions via API.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/227/',
    cancelled: false,
  },
  {
    room: 'Room 405',
    rooms: ['Room 405'],
    start: '2020-04-16T15:30:00',
    end: '2020-04-16T17:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 59,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null, null],
    name: 'Esri: Spatial Data Science with Python',
    authors: ['Shannon Kalisky', 'Hayley Miller'],
    description:
      'From asset tracking, to market analytics, to situational awareness, spatial data science is used to help organizations solve their most complex business challenges. In this session you will learn the essentials of spatial analytics from Esri \u2013 the pioneer of GIS technology and market leader in location intelligence. We will show you how spatial methods can be applied to data cleaning and feature engineering and demonstrate how you can go beyond points and lines on map to create spatial data visualizations backed by statistics. We will provide examples on how to apply spatial algorithms to solve problems and give tips and tricks on favorite Python libraries and packages to help you through each stage of your workflow.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/243/',
    cancelled: false,
  },
  {
    room: 'Room 404',
    rooms: ['Room 404'],
    start: '2020-04-16T15:30:00',
    end: '2020-04-16T17:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 58,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'JetBrains: 42 PyCharm Tips and Tricks',
    authors: ['Paul Everitt'],
    description:
      'PyCharm brings a boatload of IDE features to professional Python development. Want to \u201clevel up\u201d and learn productivity boosters? This hands-on, fast-paced workshop, run by the PyCharm team, covers tips across all the major product features. New for 2020: an intermezzo with tips to ease into productive \u2014 dare we say, joyful \u2014 testing with pytest.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/220/',
    cancelled: false,
  },
  {
    room: 'Room 401',
    rooms: ['Room 401'],
    start: '2020-04-16T15:30:00',
    end: '2020-04-16T17:00:00',
    duration: 90,
    kind: 'tutorial',
    section: 'sponsor-workshops',
    conf_key: 55,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [null],
    name: 'Google: Building Serverless Python Applications with Google Cloud',
    authors: ['Charles Engelke'],
    description:
      'You know how to program in Python. Now learn how to apply that skill to building distributed serverless applications in the cloud. You won\u2019t write just one program, you\u2019ll create several and connect them through a shared database, network requests, message queues, or triggering events. This is a hands-on workshop\u2013bring your own PC and leave having built and deployed a significant cloud application. You\u2019ll see not only how to use different cloud services to run your code, but why you would choose each one for an application\u2019s specific needs. The workshop uses Google Cloud Platform services, including Cloud Functions, Cloud Run, App Engine, Firestore, PubSub, and Identity-Aware Proxy, but the concepts covered can be applied to any major cloud platform.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/226/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T15:45:00',
    end: '2020-04-17T16:30:00',
    duration: 45,
    kind: 'break',
    section: 'talks',
    conf_key: 203,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T15:45:00',
    end: '2020-04-18T16:15:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 159,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T15:45:00',
    end: '2020-04-18T16:15:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 149,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T15:45:00',
    end: '2020-04-17T16:15:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 99,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T15:45:00',
    end: '2020-04-17T16:15:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 109,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T16:00:00',
    end: '2020-04-18T16:30:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 119,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T16:00:00',
    end: '2020-04-17T16:30:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 89,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T16:00:00',
    end: '2020-04-18T16:30:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 129,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T16:00:00',
    end: '2020-04-17T16:30:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 79,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T16:00:00',
    end: '2020-04-18T16:30:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 139,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T16:00:00',
    end: '2020-04-17T16:30:00',
    duration: 30,
    kind: 'break',
    section: 'talks',
    conf_key: 69,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Break',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-19T16:10:00',
    end: '2020-04-19T16:20:00',
    duration: 10,
    kind: 'plenary',
    section: 'talks',
    conf_key: 195,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Final Remarks and Conference Close',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T16:15:00',
    end: '2020-04-18T17:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 150,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['taniar.allard@gmail.com'],
    name: 'Docker and Python: making them play nicely and securely for Data Science and ML',
    authors: ['Tania Allard'],
    description:
      "Docker has become a standard tool for developers around the world to deploy applications in a reproducible and robust manner. The existence of Docker and Docker compose have reduced the time needed to set up new software and implementing complex technology stacks for our applications.\r\nNow, six years after the initial release of Docker, we can say with confidence that containers and containers orchestration have become some of the defaults in the current technology stacks.\r\n\r\nThere are thousands of tutorials and getting started documents for those wanting to adopt Docker for apps deployment. However, if you are a Data Scientist, a researcher or someone working on scientific computing wanting to adopt Docker, the story is quite different. There are very few tutorials (in comparison to app/web) and documents focused on Docker best practices focusing on DS and scientific computing. If you are working on DS, ML or scientific computing, this talk is for you. We'll cover best practices when building Docker containers for data-intensive applications, from optimising your image build, to ensuring your containers are secure and efficient deployment workflows.\r\n\r\nAttendees will leave the talk feeling confident about adopting Docker across a range of DS, ML and research projects.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/175/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T16:15:00',
    end: '2020-04-17T17:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 100,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['vstinner@python.org'],
    name:
      'Python Performance: Past, Present and Future (PyPy, Cython, C API, subinterpreters, tracing GC)',
    authors: ['Victor Stinner'],
    description:
      'Many past optimization projects are now abandoned or stale for different reasons: Unladen Swallow, Pyston, Pyjion, Gilectomy, etc. Victor also experimented register-based bytecode and FAT Python which he failed to finish. We will see what these projects have achieved, but also try to understand why they didn\'t complete. One common issue is the backward compatibility, especially the compatibility with C extensions.\r\n\r\nPython now has a performance benchmark suite to track performance over time. There are mature solutions to optimize performance bottlenecks and works around the GIL limitation. PyPy is a drop-in replacement for CPython: it is way faster, fully compatible, and is now more efficient to handle C extensions (PyPy cpyext). Cython is a good compromise between speed and development time: it uses a syntax close to Python but emit faster machine code. multiprocessing makes easy to scale an application on multiple CPUs, and it supports shared memory since Python 3.8. asyncio is another approach to maximize CPU utilization using concurrency for I/O (ex: network and database connections). \r\n\r\nThe pickle has also been optimized in Python 3.8 (version 5) to reduce or even avoid memory copies. For scientific computation like numpy, numba and pythran can emit efficient code using SIMD instructions and GPGPU. There are also multiple on-going experimental projects. For example, the PEP 554 proposes to have multiple interpreter instances, called "sub-interpreters", per process, and run them in parallel: no single process-wide lock, but one lock per interpreter. The C API used by C extensions is also being reworked to hide implementation details and provide better forward compatibility. In the long term, it may unlock many new optimizations in CPython, and it may even allow to use the same C extension binary for CPython and PyPy.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/144/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T16:15:00',
    end: '2020-04-18T17:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 160,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['hmstepanek@gmail.com'],
    name: "Let's talk Databases in Python: SQLAlchemy and Alembic",
    authors: ['Hannah Stepanek'],
    description:
      'What\u2019s an ORM? Is there a way to write database queries so that they are compatible with multiple types of databases? How do you make database changes (such as adding a new table or a new column) safely? What is a connection pool and why is it useful? What are some things that can go wrong when operating at scale? Is lazy loading slowing you down? In this talk we\u2019ll take a deep dive into how the Python libraries SQLAlchemy and Alembic make managing production databases simple, efficient, and painless so you can get back to feature development.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/100/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T16:15:00',
    end: '2020-04-17T17:00:00',
    duration: 45,
    kind: 'talk',
    section: 'talks',
    conf_key: 110,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['marlenemhangami@gmail.com'],
    name: 'Leadership and Identity in the Pan-African Python movement',
    authors: ['Marlene Mhangami'],
    description:
      "In this talk, I will be outlining some of the unique aspects of being a young, female community leader in the budding Pan-African Python movement. I will begin by giving the audience an overview of the current state of the African Python community and my role in its development. I will then share some of my personal experiences, both positive and negative, leading in community spaces and juxtapose them to some philosophical ideas about leadership. I will be sharing some of my favorite philosophers' ideas on the topic, as well as some perspectives on how online communities have historically treated leadership. All of this information will be used, to make a proposition for how our community should view and identify leaders. I also go on to share how my personal and group identity as an African has played a large role in shaping how I lead. Our unique identities are incredibly significant, I argue that Pythonistas intending to build a more diverse and inclusive global community should be thoughtful about their identity. Finally, I will be sharing some anecdotes on what I believe the future leaders of our community should look like.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/152/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T16:30:00',
    end: '2020-04-18T17:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 120,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['micha2718l@gmail.com'],
    name:
      'So Long and Thanks for All the Fish: Listening to dolphins using Python and the scientific stack.',
    authors: ['Michael J Haas'],
    description:
      "Dolphins are incredible animals who use audio for echolocation as well as communication. Come on a tour of building a data pipeline and analysis system for 10's of terabytes of audio data recorded in the Gulf of Mexico. The data engineering is done in nearly pure Python, the visualizations using matplotlib and Bokeh, and noise cleaning and analysis using NumPy, SciPy, and PyWavelets. Scaling these past small data sizes started to break down, here Dask is used to enable distributed systems scaling to small and large clusters. Hear about all of this as well as a story of convincing an established team of scientists to move away from MatLab and to start using open source technology.\r\n\r\nThis talk will yield many interesting tips and tricks to take back to your team or project. Ever been curious about how to compute a spectrogram? Want to learn about some modern ways of building distributed computational systems? Interested in what the dolphins are saying down there? See the progression of using single Python scripts on small data to using Jupyter Notebooks for better presentation, all the way to scaling up to clusters of computers using Dask.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/177/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T16:30:00',
    end: '2020-04-17T17:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 80,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['yurinai@gmail.com'],
    name: 'LibCST - automated code refactoring made easy',
    authors: ['Jimmy Lai'],
    description:
      'You have a big codebase with lots of developers. Developers often copy-paste code and bad patterns spread around quickly. Code quality is out of control and deprecating things becomes lots of repetitive hard work. That\u2019s a situation we used to have. We built LibCST as a foundation to make automated refactoring on a large codebase possible. LibCST is an open source Python concrete syntax tree parser that enables easy traversal and modification of source code.\r\n\r\nIn this talk, you\u2019ll learn to use LibCST to build automated refactoring tools to fix code quality issues, deprecate libraries and build lint rules with auto-fix to help developers write better code.\r\n\r\nMore context is available in blog post https://fb.me/libcst-story and LibCST project https://git.io/Je5l2',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/143/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T16:30:00',
    end: '2020-04-17T17:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 70,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['jeffbass42@gmail.com'],
    name:
      'Yin Yang Ranch: Building a Distributed Computer Vision Pipeline using Python, OpenCV and ZMQ',
    authors: ['Jeff Bass'],
    description:
      'I am building a small permaculture farm in Southern California. I have written computer vision programs in Python to read the water meter, optimize water use, track coyotes, rabbits, raccoons and bobcats, etc. The farm is set up like an ongoing science project. I am running Python on 20 Raspberry Pi computers with PiCameras and sensors. The RPi\u2019s capture images, detect motion and select a subset of images. Did the water meter move? Was a coyote seen? If so, images are sent to a hub computer via PyZMQ. The hub computer uses Python and OpenCV to do more advanced processing like reading the water meter digits or keeping critter counts by season. This arrangement demonstrates ways that Python can be helpful in developing IOT networks with multiple cameras and sensors.\r\n\r\nIn this talk I will describe the hub and spoke design that distributes processing across a mix of RPi\u2019s and larger computers. I\u2019ll cover the pros and cons of PyZMQ messaging for image transfer. I\u2019ll describe OpenCV techniques in Python that have been helpful on both the RPi\u2019s and the hub computer. All the programs are pure Python, and they leverage fast libraries written in C, like OpenCV and ZMQ by using Python bindings.  This is an open source project with all the Python source code available on GitHub. Hardware \u201chow to\u2019s\u201d & photos are also on GitHub. Pictures of my farm and my favorite coyotes are also on GitHub\u2026because why not?',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/150/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T16:30:00',
    end: '2020-04-18T17:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 140,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['cjsmith@sei.cmu.edu'],
    name: 'Implementing Ethics: Developing Trustworthy AI',
    authors: ['Carol J. Smith'],
    description:
      'Ethics discussions abound, but translating \u201cdo no harm\u201d into our work is frustrating at best, and obfuscatory at worst. We can agree that keeping humans safe and in control is important, but implementing ethics is intimidating work.\r\n\r\nLearn how to wield your preferred technology ethics code to make an AI system that is accountable, de-risked, respectful, secure, honest and usable. The presenter will introduce the topic of ethics and then step through a user experience (UX) framework to guide AI development teams successfully through this process.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/117/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T16:30:00',
    end: '2020-04-17T17:00:00',
    duration: 30,
    kind: 'charlas',
    section: 'talks',
    conf_key: 204,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['denny.perez23@gmail.com'],
    name:
      'Diario de mi transici\u00f3n personal y profesional: como la comunidad de Python me inspir\u00f3',
    authors: ['Denny Perez'],
    description:
      'Imagina que tienes un gran trabajo, con el que te sientes realizada. Una bonita casa y una familia estupenda. Ahora imagina, que tu pa\u00eds se vuelve un lugar inestable, en el que la delincuencia comienza a apoderarse de las calles. Probablemente tu siguiente decisi\u00f3n ser\u00eda huir y poner a salvo a los tuyos. Esta es la historia que quiero contar, de c\u00f3mo una contable de \u00e9xito, con una familia estupenda tuvo que trasladarse desde Republica Dominicana a Montreal, sin saber ni la lengua ni si encontrar\u00eda trabajo, y de c\u00f3mo Python y su comunidad consiguieron que esto fuera posible.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/84/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T16:30:00',
    end: '2020-04-18T17:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 130,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['p.ganssle@gmail.com'],
    name: "What to do When the Bug is in Someone Else's Code",
    authors: ['Paul Ganssle'],
    description:
      "It's generally better to use libraries than to write your own code, but what happens when you run into an issue that is correctly solved by modifying the *library code* rather than your own code? What if you need to deploy a fix *today*, but you can't count on the upstream library applying the required fixes and getting a new release through your deployment system before your deadline? This presentation will cover various stop-gap strategies (of varying desirability) for dealing with this situation, including:\r\n\r\n- Working around the bug with wrapper functions\r\n- Monkey patching the offending methods or functions\r\n- Vendoring a patched version of the library into your application\r\n- Maintaining a forked version in your local package manager",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/147/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T16:30:00',
    end: '2020-04-17T17:00:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 90,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['fphillips7@bloomberg.net'],
    name: 'Hooking into the Python import system',
    authors: ['Fred Phillips'],
    description:
      'Import hooks and the import system in general is an under-used and\r\nunder-documented resource within Python. This talk will introduce the audience\r\nto the import system, how it works, and how it can be adapted for their needs.\r\nWe will build a simple import hook that can inspect what is being imported, and\r\ngo on to demonstrate how we can use the import system to load Python modules\r\nfrom a database and how to reload files on disk immediately as they are changed.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/124/',
    cancelled: false,
  },
  {
    room: 'Room 319, Room 318, Room 317, Room 316, Room 315, Room 310/311, Room 309, Room 320',
    rooms: [
      'Room 319',
      'Room 318',
      'Room 317',
      'Room 316',
      'Room 315',
      'Room 310/311',
      'Room 309',
      'Room 320',
    ],
    start: '2020-04-16T16:40:00',
    end: '2020-04-16T17:30:00',
    duration: 50,
    kind: 'blank',
    section: 'tutorials',
    conf_key: 35,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '\u200b',
  },
  {
    room: 'Room 401, Room 402, Room 403, Room 404, Room 405',
    rooms: ['Room 401', 'Room 402', 'Room 403', 'Room 404', 'Room 405'],
    start: '2020-04-16T17:00:00',
    end: '2020-04-16T17:30:00',
    duration: 30,
    kind: 'blank',
    section: 'sponsor-workshops',
    conf_key: 60,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '\u200b',
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T17:10:00',
    end: '2020-04-17T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 111,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['benjamin@bengfort.com'],
    name: 'Monitoring the Power Grid with Python',
    authors: ['Benjamin Bengfort'],
    description:
      "When we think about what Python is for, we often think of things like analytics (SciPy, NumPy, Pandas), machine learning (scikit-learn, PyTorch, Keras), and web apps (Django, Flask). But Python (together with its rich ecosystem of open source libraries) plays a tremendous and often invisible role in our everyday lives, from medicine to finance, and even the very electricity that powers our cities. In fact, the power grid is one of the most interesting domains for Python software implementations both because of the massive amount of data it generates, and the rather high stakes nature of execution.\r\n\u200b\r\nTo cope with increasing load and a shift toward demand-side generation, today's electric grids are increasingly monitored by a fleet of networked sensors. Together, these sensors provide control room operators with real-time snapshots of the grid that allow them to bolster physical protection mechanisms with predictive maintenance and rapid response. However, they also generate petabytes of data that must be analyzed in real-time to detect microsecond events across a wide area, often with variable connectivity that leads to poor data quality and makes traditional time series analytics very difficult.\r\n\u200b\r\nFlexibility is the key to merging analytics that use sliding window analyses such as voltage sag detection with jitter-prone, variable sensor streams, which makes Python the ideal tool. In this talk, we will describe using a time-partitioned, measurement aggregating tree structure with btrdb-python to facilitate rapid queries on dense telemetry, using power engineering use cases a guide. We will also describe the design and development of conduit, a Python data flow library that interacts with btrdb-python to allow descriptive preprocessing of data on demand.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/138/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T17:10:00',
    end: '2020-04-18T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 161,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['terri@toybox.ca'],
    name: 'Using Python to Detect Vulnerabilities in Binaries',
    authors: ['Terri Oda'],
    description:
      "Detecting known software vulnerabilities is hard to do perfectly, but it's easy to get part way there. The CVE Binary Tool is a tool that detects issues in a few components but has grand ambitions. Learn how it works, how to use it & how to improve it so together we can help everyone be more secure.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/170/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T17:10:00',
    end: '2020-04-18T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 141,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['harry.percival@gmail.com'],
    name: 'Stop Using Mocks (for a while)',
    authors: ['Harry Percival'],
    description:
      'Classic testing tutorials usually present code that\u2019s free of side-effects and external I/O dependencies, but the real world is seldom so straightforward. We find ourselves reaching for mocks to keep our tests isolated, and that often leads to tests that are hard to understand and maintain, and we start to question their value.\r\n\r\nWhen we substitute integration or end-to-end tests to assure ourselves that things work in the real world, we end up with test suites getting slower and slower, and instead of a \u201ctest pyramid\u201d we end up with an \u201cice cream cone\u201d.\r\n\r\nThis talk proposes a cure: if we stop ourselves from using mocks, cold turkey, we will be forced to think more carefully about how to design our code, how to separate business logic from integration and I/O concerns. The talk will cover patterns like \u201cFunctional Core, Imperative Shell\u201d, the use of Dependency Injection and hand-rolled fakes as an alternative to mocking and patching, and show how they can help us get better-designed code, more maintainable tests, and a healthy test pyramid.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/118/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T17:10:00',
    end: '2020-04-18T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 151,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['hank.preston@gmail.com'],
    name: 'Introduction to Writing Network Tests with pyATS',
    authors: ['Hank Preston'],
    description:
      "How do you test that your network is healthy?  You probably ping a few things, run some show commands, and watch for open trouble tickets.  I don't think I'll stir up a ton of controversy by saying that's a really bad method.  With the move towards network automation, NetDevOps, and Network Reliability Engineering (NRE), we need to have robust, repeatable tests to check the state of the network from Layer 1 to 7.  \r\n\r\npyATS is an open source network test framework that was built by software developers for network developers.  It provides all the tools automation engineers need to describe test cases, run jobs, gather reports, and make the entire process part of your network automation pipeline.  In this talk, we'll look at everything you need to write your first few test cases, and discuss strategies for what you should test, and when.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/134/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T17:10:00',
    end: '2020-04-17T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 71,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['paul.l.kehrer@gmail.com', 'william@yossarian.net'],
    name: 'TUFening PyPI: Securing the Package Supply Chain',
    authors: ['Paul Kehrer', 'William Woodruff'],
    description:
      "Every time you fetch a package from the Python Package Index (PyPI) you're making an implicit security decision. However, the security implications of package indexes are not typically well understood by developers. What guarantees does PyPI provide? What are the threats?  What is The Update Framework (TUF) and how does it help? Join us on a tour through the past, present, and future of PyPI's security.",
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/104/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T17:10:00',
    end: '2020-04-18T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 121,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['neerajyednap@gmail.com'],
    name: 'The joy of creating art with code.',
    authors: ['Neeraj Pandey'],
    description:
      'Art is everywhere and it\u2019s beautiful. Unleash the creative artist inside you with the beauty of Generative Art. Learn how algorithms are used to create these aesthetic art forms, how motion and structures emit sounds and what toolkits are required to do so. The talk will take the audience to a small history of Generative Art and how autonomously these art forms are created using algorithms with various examples using Processing, PyCario and more.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/151/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T17:10:00',
    end: '2020-04-17T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 91,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['elizabeth.shashkova@gmail.com'],
    name: 'The Hidden Power of the Python Runtime',
    authors: ['Elizaveta Shashkova'],
    description:
      'Many people like Python for its simplicity and beauty. But every statement in Python, even the simple one, produces a lot of events during the program execution. These events are usually hidden from a user, so it helps developers to skip low-level implementation details and focus on bigger things.\r\n\r\nAt the same time many parts of this hidden information are very useful and interesting to examine. The good news is that the Python Runtime allows to retrieve it really simply, so there is no need to configure additional libraries or pass additional parameters to interpreter. Everybody can do it right inside their Python code.\r\n\r\nDuring this talk we will learn how Python allows to inspect current program state during the execution. We will learn about Python memory model, variables, frame objects and about useful information they store. After that we will discuss several powerful tools which are based on the runtime information and which can be very helpful for any Python programmer in their everyday life.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/121/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T17:10:00',
    end: '2020-04-17T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 101,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['chriskseto@gmail.com'],
    name: 'Big O No: Django ORM runtime complexity and how to avoid it using LATERAL JOINS',
    authors: ['Chris Seto'],
    description:
      'N+1 queries are as common as blog posts about how to solve them. What happens when you want to get a list of blog posts, the comments on them, and the comments\u2019 respective authors? An exponential number of queries. The rise of GraphQL and REST APIs that provide \u201cinclude\u201d semantics make these situations increasingly common and painful. Clever use of prefetch_related and select_related may help in a pinch but never fully solve the problem. Learn how to identify these inefficient queries and optimize them using SQL aggregations and LATERAL JOINs.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/157/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T17:10:00',
    end: '2020-04-17T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 81,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['variedthoughts@gmail.com'],
    name: 'Multiply your Testing Effectiveness with Parameterized Testing',
    authors: ['Brian K Okken'],
    description:
      'Parametrization is one of the superpowers of pytest. It allows you to cover a huge number of test cases with a single test function. This speeds up test writing and makes test maintenance easier. This talk is a medium depth dive into pytest parametrization, with techniques you can use right away.\r\n\r\nThis talk will use of code examples, starting with a simple test then demonstrating 3 methods of parametrization, as well as test case identifiers and using generators.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/172/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-18T17:10:00',
    end: '2020-04-18T17:40:00',
    duration: 30,
    kind: 'talk',
    section: 'talks',
    conf_key: 131,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['mason@masonegger.com'],
    name: 'Building Docs like Code: Continuous Integration for Documentation',
    authors: ['Mason Egger'],
    description:
      'It is common for developers to overlook the documentation of their works. They are either on a time crunch, lack the proper tooling, or simply just forget to create and update the documentation. Whatever the cause behind this, it is not a proper excuse for not keeping the documentation up to date. However, for all our development processes there are few as neglected as the documentation process. Documentation should be treated as important as the code that makes up the project. So, let\u2019s move the documentation into the code. With modern documentation tools such as MkDocs and Sphinx, both of which are Python powered tools, and Continuous Integration tools we can now include docs in the commit. They can be reviewed in code reviews, built and versioned in a CI tool, and even tested for things such as correct code examples and broken links. This is the process that the developer knows, understands, and enjoys. I introduced a team to this exact workflow and a working pipeline; all they had to do was keep the documentation up to date. This team currently has some of the most up to date documentation in a company of near two thousand engineers, and they never complain about writing/updating documentation. It\u2019s just part of the workflow.\r\n\r\nAttendees will walk away with a new mindset on how to handle documentation, a list of tools that can aid in this process, and a proven, easy-to-implement method that works well for real engineers in a production setting.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/98/',
    cancelled: false,
  },
  {
    room: 'Room TBD',
    rooms: ['Room TBD'],
    start: '2020-04-17T17:10:00',
    end: '2020-04-17T17:40:00',
    duration: 30,
    kind: 'charlas',
    section: 'talks',
    conf_key: 205,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: ['ddelgado.dev@gmail.com'],
    name: 'Datos, Python y humanos: haciendo ciencia de datos en pa\u00edses latinoamericanos',
    authors: ['David Mauricio Delgado Ruiz'],
    description:
      'En esta charla quiero presentar 5 retos particulares de hacer ciencia de datos en pa\u00edses latinoamericanos y c\u00f3mo enfrentarse a ellos con \u00e9xito a trav\u00e9s de 5 historias de la vida real. Las historias vienen de mi experiencia trabajando en Quantil, una empresa con 11 a\u00f1os haciendo consultor\u00eda en ciencia de datos en Colombia. Latinoam\u00e9rica es una regi\u00f3n con una historia diversa y compleja que nos dej\u00f3 atr\u00e1s en varios aspectos, incluso el tecnol\u00f3gico y cient\u00edfico. Aunque est\u00e1 cambiando, un cient\u00edfico de datos o una empresa que se dedique a esto enfrenta retos como la falta de confianza en software open source (y por tanto en Python), el d\u00e9ficit de profesionales capacitados hol\u00edsticamente en Python y otras tecnolog\u00edas de facto, el desorden de los datos a usar en las organizaciones, entre otros. Finalmente presentar\u00e9 mi visi\u00f3n del futuro de la ciencia de datos en la regi\u00f3n y su impacto en los pa\u00edses que decidan aprovecharla.',
    conf_url: 'https://us.pycon.org/2020/schedule/presentation/83/',
    cancelled: false,
  },
  {
    room: 'Room 401, Room 402, Room 403, Room 404, Room 405',
    rooms: ['Room 401', 'Room 402', 'Room 403', 'Room 404', 'Room 405'],
    start: '2020-04-16T17:30:00',
    end: '2020-04-16T19:30:00',
    duration: 120,
    kind: 'event',
    section: 'sponsor-workshops',
    conf_key: 61,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Opening Reception (Expo Hall)',
  },
  {
    room: 'Room 319, Room 318, Room 317, Room 316, Room 315, Room 310/311, Room 309, Room 320',
    rooms: [
      'Room 319',
      'Room 318',
      'Room 317',
      'Room 316',
      'Room 315',
      'Room 310/311',
      'Room 309',
      'Room 320',
    ],
    start: '2020-04-16T17:30:00',
    end: '2020-04-16T19:30:00',
    duration: 120,
    kind: 'event',
    section: 'tutorials',
    conf_key: 36,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Opening Reception (Expo Hall)',
  },
  {
    room: 'Room 330, Room 408',
    rooms: ['Room 330', 'Room 408'],
    start: '2020-04-16T17:30:00',
    end: '2020-04-16T19:30:00',
    duration: 120,
    kind: 'event',
    section: 'hatchery',
    conf_key: 209,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Opening Reception (Expo Hall)',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-17T17:40:00',
    end: '2020-04-17T18:40:00',
    duration: 60,
    kind: 'plenary',
    section: 'talks',
    conf_key: 181,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lightning Talks',
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T17:40:00',
    end: '2020-04-18T18:30:00',
    duration: 50,
    kind: 'plenary',
    section: 'hatchery',
    conf_key: 243,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lightning Talks',
  },
  {
    room: 'Ballroom Gallery, Room 321, Room 330, Room 409, Room 408',
    rooms: ['Ballroom Gallery', 'Room 321', 'Room 330', 'Room 409', 'Room 408'],
    start: '2020-04-17T17:40:00',
    end: '2020-04-17T18:40:00',
    duration: 60,
    kind: 'plenary',
    section: 'hatchery',
    conf_key: 218,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lightning Talks',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-18T17:40:00',
    end: '2020-04-18T18:30:00',
    duration: 50,
    kind: 'plenary',
    section: 'talks',
    conf_key: 187,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'Lightning Talks',
  },
  {
    room: 'Room TBD, Room TBD, Room TBD, Room TBD, Room TBD',
    rooms: ['Room TBD', 'Room TBD', 'Room TBD', 'Room TBD', 'Room TBD'],
    start: '2020-04-18T18:30:00',
    end: '2020-04-18T21:00:00',
    duration: 150,
    kind: 'event',
    section: 'talks',
    conf_key: 188,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'PyLadies Charity Auction',
  },
  {
    room: 'Room 321',
    rooms: ['Room 321'],
    start: '2020-04-18T18:30:00',
    end: '2020-04-18T21:00:00',
    duration: 150,
    kind: 'event',
    section: 'hatchery',
    conf_key: 244,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: 'PyLadies Charity Auction',
  },
  {
    room: 'Ballroom Gallery, Room 321, Room 330, Room 409, Room 408',
    rooms: ['Ballroom Gallery', 'Room 321', 'Room 330', 'Room 409', 'Room 408'],
    start: '2020-04-17T18:40:00',
    end: '2020-04-17T19:30:00',
    duration: 50,
    kind: 'blank',
    section: 'hatchery',
    conf_key: 282,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '\u200b',
  },
  {
    room: 'Ballroom Gallery, Room 321, Room 330, Room 409, Room 408',
    rooms: ['Ballroom Gallery', 'Room 321', 'Room 330', 'Room 409', 'Room 408'],
    start: '2020-04-17T19:30:00',
    end: '2020-04-17T21:30:00',
    duration: 120,
    kind: 'event',
    section: 'hatchery',
    conf_key: 281,
    license: 'CC BY',
    tags: '',
    released: true,
    contact: [],
    name: '[The Art of Python](/2020/hatchery/artofpython/) (Room 301-305)',
  },
]

const getScheduleByCategory = category =>
  _.sortBy(
    SCHEDULE.filter(item => item.kind === category),
    ['name'],
  )

export const TITLES_BY_CATEGORY = {
  Talk: getScheduleByCategory('talk'),
  Tutorial: getScheduleByCategory('tutorial'),
  Charla: getScheduleByCategory('charlas'),
}
